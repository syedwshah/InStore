{"version":3,"file":"Facebook.js","sourceRoot":"","sources":["../src/Facebook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAEvD,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAkBlD,MAAM,CAAC,KAAK,UAAU,6BAA6B,CACjD,OAAyB;IAEzB,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,EAAE;QACnD,MAAM,IAAI,mBAAmB,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;KAC5E;IAED,IAAI,CAAC,OAAO,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC3C,OAAO,GAAG,EAAE,CAAC;KACd;IAED,OAAO,gBAAgB,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;AACjE,CAAC;AAED;;;;;;;;;;;;GAYG;AACH,MAAM,CAAC,KAAK,UAAU,+BAA+B,CAAC,OAAgB;IACpE,IAAI,CAAC,gBAAgB,CAAC,+BAA+B,EAAE;QACrD,MAAM,IAAI,mBAAmB,CAAC,UAAU,EAAE,iCAAiC,CAAC,CAAC;KAC9E;IACD,OAAO,MAAM,gBAAgB,CAAC,+BAA+B,CAAC,OAAO,CAAC,CAAC;AACzE,CAAC;AAED;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,OAAgB;IAC5D,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE;QAC7C,MAAM,IAAI,mBAAmB,CAAC,UAAU,EAAE,yBAAyB,CAAC,CAAC;KACtE;IACD,OAAO,MAAM,gBAAgB,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;AACjE,CAAC;AAED;;;;;;;;;;;;GAYG;AACH,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,KAAc,EAAE,OAAgB;IACpE,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,mBAAmB,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;KAC9D;IACD,OAAO,MAAM,gBAAgB,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAChE,CAAC;AAED;;;;;;;;;;;;GAYG;AACH,MAAM,CAAC,KAAK,UAAU,qCAAqC,CAAC,OAAgB;IAC1E,IAAI,CAAC,gBAAgB,CAAC,qCAAqC,EAAE;QAC3D,MAAM,IAAI,mBAAmB,CAAC,UAAU,EAAE,uCAAuC,CAAC,CAAC;KACpF;IACD,OAAO,MAAM,gBAAgB,CAAC,qCAAqC,CAAC,OAAO,CAAC,CAAC;AAC/E,CAAC","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExponentFacebook from './ExponentFacebook';\n\nexport type FacebookLoginResult =\n  | {\n      type: 'cancel';\n    }\n  | {\n      type: 'success';\n      token: string;\n      expires: number;\n      permissions: string[];\n      declinedPermissions: string[];\n    };\n\nexport type FacebookOptions = {\n  permissions?: string[];\n};\n\nexport async function logInWithReadPermissionsAsync(\n  options?: FacebookOptions\n): Promise<FacebookLoginResult> {\n  if (!ExponentFacebook.logInWithReadPermissionsAsync) {\n    throw new UnavailabilityError('Facebook', 'logInWithReadPermissionsAsync');\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {};\n  }\n\n  return ExponentFacebook.logInWithReadPermissionsAsync(options);\n}\n\n/**\n * Sets whether Facebook SDK should log app events. App events involve eg. app installs,\n * app launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\n * and [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).\n *\n * In some cases, you may want to disable or delay the collection of automatically logged events,\n * such as to obtain user consent or fulfill legal obligations.\n *\n * This method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\n * and [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events) native SDK methods.\n *\n * @param enabled Whether automatic events logging of the Facebook SDK should be enabled\n */\nexport async function setAutoLogAppEventsEnabledAsync(enabled: boolean) {\n  if (!ExponentFacebook.setAutoLogAppEventsEnabledAsync) {\n    throw new UnavailabilityError('Facebook', 'setAutoLogAppEventsEnabledAsync');\n  }\n  return await ExponentFacebook.setAutoLogAppEventsEnabledAsync(enabled);\n}\n\n/**\n * Sets whether Facebook SDK should autoinitialize itself. SDK initialization involves eg.\n * fetching app settings from Facebook or a profile of the logged in user.\n * In some cases, you may want to disable or delay the SDK initialization,\n * such as to obtain user consent or fulfill legal obligations.\n *\n * This method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-sdk-initialization)\n * and [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-sdk-initialization) native SDK methods.\n *\n * Note: Even though calling this method with `enabled == true` initialized the Facebook SDK on iOS,\n * it does not on Android and we recommend always calling `initializeAsync` before performing\n * any actions with effects that should be visible to the user (like `loginWithPermissions`).\n *\n * @param enabled Whether autoinitialization of the Facebook SDK should be enabled\n */\nexport async function setAutoInitEnabledAsync(enabled: boolean) {\n  if (!ExponentFacebook.setAutoInitEnabledAsync) {\n    throw new UnavailabilityError('Facebook', 'setAutoInitEnabledAsync');\n  }\n  return await ExponentFacebook.setAutoInitEnabledAsync(enabled);\n}\n\n/**\n * Calling this method ensures that the SDK is initialized.\n * You have to call this method before calling `logInWithReadPermissionsAsync`\n * to ensure that Facebook support is initialized properly.\n *\n * You may or may not provide an optional `appId: string` argument.\n * - If you don't provide it, Facebook SDK will try to use `appId` from native app resources,\n *   If it fails to find one, the promise will be rejected.\n * - If you provide an explicit `appId`, it will override any other source.\n * The same resolution mechanism is applied to `appName`.\n * @param appId An optional Facebook App ID argument\n * @param appName An optional Facebook App Name argument\n */\nexport async function initializeAsync(appId?: string, appName?: string) {\n  if (!ExponentFacebook.initializeAsync) {\n    throw new UnavailabilityError('Facebook', 'initializeAsync');\n  }\n  return await ExponentFacebook.initializeAsync(appId, appName);\n}\n\n/**\n * Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA\n * and Android Advertising ID, automatically. Advertiser IDs let you identify and target specific customers.\n * To learn more visit [Facebook documentation](https://developers.facebook.com/docs/app-ads/targeting/mobile-advertiser-ids)\n * describing that topic.\n *\n * In some cases, you may want to disable or delay the collection of `advertiser-id`,\n * such as to obtain user consent or fulfill legal obligations.\n *\n * This method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-advertiser-id)\n * and [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-advertiser-id) native SDK methods.\n * @param enabled Whether `advertiser-id` should be collected\n */\nexport async function setAdvertiserIDCollectionEnabledAsync(enabled: boolean) {\n  if (!ExponentFacebook.setAdvertiserIDCollectionEnabledAsync) {\n    throw new UnavailabilityError('Facebook', 'setAdvertiserIDCollectionEnabledAsync');\n  }\n  return await ExponentFacebook.setAdvertiserIDCollectionEnabledAsync(enabled);\n}\n"]}