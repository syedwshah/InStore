{"version":3,"sources":["space.ts"],"names":["spaceUtils","props","_style","themeSpace","mb","space","marginBottom","mt","marginTop","mr","marginRight","ml","marginLeft","my","marginVertical","mx","marginHorizontal","m","margin","pb","paddingBottom","pt","paddingTop","pr","paddingRight","pl","paddingLeft","py","paddingVertical","px","paddingHorizontal","p","padding"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\n\nimport { ITheme } from '../types/ITheme';\n\ntype Props = {\n  theme: ITheme;\n} & Partial<{\n  m: number | string;\n  mb: number | string;\n  mt: number | string;\n  mr: number | string;\n  ml: number | string;\n  my: number | string;\n  mx: number | string;\n\n  p: number | string;\n  pb: number | string;\n  py: number | string;\n  pt: number | string;\n  pr: number | string;\n  pl: number | string;\n  px: number | string;\n}>;\n\nexport const spaceUtils = (props: Props) => {\n  const _style: {\n    marginBottom?: number;\n    marginTop?: number;\n    marginHorizontal?: number;\n    marginVertical?: number;\n    marginRight?: number;\n    marginLeft?: number;\n    margin?: number;\n\n    padding?: number;\n    paddingBottom?: number;\n    paddingTop?: number;\n    paddingHorizontal?: number;\n    paddingVertical?: number;\n    paddingRight?: number;\n    paddingLeft?: number;\n  } = {};\n\n  const themeSpace = get(props, ['theme', 'space']);\n\n  if (themeSpace) {\n    const mb = get(props, 'mb');\n\n    if (mb) {\n      if (typeof mb === 'string') {\n        const space = themeSpace[mb];\n\n        if (space) {\n          _style.marginBottom = space;\n        }\n      } else if (typeof mb === 'number') {\n        _style.marginBottom = mb;\n      }\n    }\n\n    const mt = get(props, 'mt');\n\n    if (mt) {\n      if (typeof mt === 'string') {\n        const space = themeSpace[mt];\n\n        if (space) {\n          _style.marginTop = space;\n        }\n      } else if (typeof mt === 'number') {\n        _style.marginTop = mt;\n      }\n    }\n\n    const mr = get(props, 'mr');\n\n    if (mr) {\n      if (typeof mr === 'string') {\n        const space = themeSpace[mr];\n\n        if (space) {\n          _style.marginRight = space;\n        }\n      } else if (typeof mr === 'number') {\n        _style.marginRight = mr;\n      }\n    }\n\n    const ml = get(props, 'ml');\n\n    if (ml) {\n      if (typeof ml === 'string') {\n        const space = themeSpace[ml];\n\n        if (space) {\n          _style.marginLeft = space;\n        }\n      } else if (typeof ml === 'number') {\n        _style.marginLeft = ml;\n      }\n    }\n\n    const my = get(props, 'my');\n\n    if (my) {\n      if (typeof my === 'string') {\n        const space = themeSpace[my];\n\n        if (space) {\n          _style.marginVertical = space;\n        }\n      } else if (typeof my === 'number') {\n        _style.marginVertical = my;\n      }\n    }\n\n    const mx = get(props, 'mx');\n\n    if (mx) {\n      if (typeof mx === 'string') {\n        const space = themeSpace[mx];\n\n        if (space) {\n          _style.marginHorizontal = space;\n        }\n      } else if (typeof mx === 'number') {\n        _style.marginHorizontal = mx;\n      }\n    }\n\n    const m = get(props, 'm');\n\n    if (m) {\n      if (typeof m === 'string') {\n        const space = themeSpace[m];\n\n        if (space) {\n          _style.margin = space;\n        }\n      } else if (typeof m === 'number') {\n        _style.margin = m;\n      }\n    }\n\n    const pb = get(props, 'pb');\n\n    if (pb) {\n      if (typeof pb === 'string') {\n        const space = themeSpace[pb];\n\n        if (space) {\n          _style.paddingBottom = space;\n        }\n      } else if (typeof pb === 'number') {\n        _style.paddingBottom = pb;\n      }\n    }\n\n    const pt = get(props, 'pt');\n\n    if (pt) {\n      if (typeof pt === 'string') {\n        const space = themeSpace[pt];\n\n        if (space) {\n          _style.paddingTop = space;\n        }\n      } else if (typeof pt === 'number') {\n        _style.paddingTop = pt;\n      }\n    }\n\n    const pr = get(props, 'pr');\n\n    if (pr) {\n      if (typeof pr === 'string') {\n        const space = themeSpace[pr];\n\n        if (space) {\n          _style.paddingRight = space;\n        }\n      } else if (typeof pr === 'number') {\n        _style.paddingRight = pr;\n      }\n    }\n\n    const pl = get(props, 'pl');\n\n    if (pl) {\n      if (typeof pl === 'string') {\n        const space = themeSpace[pl];\n\n        if (space) {\n          _style.paddingLeft = space;\n        }\n      } else if (typeof pl === 'number') {\n        _style.paddingLeft = pl;\n      }\n    }\n\n    const py = get(props, 'py');\n\n    if (py) {\n      if (typeof py === 'string') {\n        const space = themeSpace[py];\n\n        if (space) {\n          _style.paddingVertical = space;\n        }\n      } else if (typeof py === 'number') {\n        _style.paddingVertical = py;\n      }\n    }\n\n    const px = get(props, 'px');\n\n    if (px) {\n      if (typeof px === 'string') {\n        const space = themeSpace[px];\n\n        if (space) {\n          _style.paddingHorizontal = space;\n        }\n      } else if (typeof px === 'number') {\n        _style.paddingHorizontal = px;\n      }\n    }\n\n    const p = get(props, 'p');\n\n    if (p) {\n      if (typeof p === 'string') {\n        const space = themeSpace[p];\n\n        if (space) {\n          _style.padding = space;\n        }\n      } else if (typeof p === 'number') {\n        _style.padding = p;\n      }\n    }\n  }\n\n  return _style;\n};\n"]}