{"version":3,"sources":["radius.ts"],"names":["radiusUtils","props","_style","themeRadius","radius","circle","avatar","children","newChildren","React","Children","only","valueOf","Image","cloneElement","style","borderRadius","height","width","_radius","base"],"mappings":"4PAEA,0DACA,yCACA,oDAiBO,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAmB,CAC5C,GAAMC,CAAAA,MAIL,CAAG,EAJJ,CAMA,GAAMC,CAAAA,WAAW,CAAG,oBAAIF,KAAJ,CAAW,CAAC,OAAD,CAAU,QAAV,CAAX,CAApB,CAEA,GAAMG,CAAAA,MAAM,CAAG,oBAAIH,KAAJ,CAAW,QAAX,CAAf,CACA,GAAMI,CAAAA,MAAM,CAAG,oBAAIJ,KAAJ,CAAW,QAAX,CAAf,CACA,GAAMK,CAAAA,MAAM,CAAG,oBAAIL,KAAJ,CAAW,QAAX,CAAf,CACA,GAAMM,CAAAA,QAAQ,CAAG,oBAAIN,KAAJ,CAAW,UAAX,CAAjB,CAEA,GAAIO,CAAAA,WAAW,CAAGD,QAAlB,CAEA,GAAIJ,WAAJ,CAAiB,CACf,GACEG,MAAM,EACN,MAAOD,CAAAA,MAAP,GAAkB,QADlB,EAEAE,QAFA,EAGAE,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBJ,QAApB,EAA8BK,OAA9B,KAA4CC,kBAJ9C,CAKE,CAEAL,WAAW,CAAGC,KAAK,CAACK,YAAN,CAAmBL,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBJ,QAApB,CAAnB,CAAkD,CAC9DQ,KAAK,CAAE,CACLC,YAAY,CAAEX,MAAM,CAAG,CADlB,CAELY,MAAM,CAAEZ,MAFH,CAGLa,KAAK,CAAEb,MAHF,CADuD,CAAlD,CAAd,CAOAH,MAAM,CAACc,YAAP,CAAsBX,MAAM,CAAG,CAA/B,CACAH,MAAM,CAACe,MAAP,CAAgBZ,MAAhB,CACAH,MAAM,CAACgB,KAAP,CAAeb,MAAf,CACD,CAjBD,IAiBO,IAAI,MAAOA,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CACrCH,MAAM,CAACc,YAAP,CAAsBX,MAAM,CAAG,CAA/B,CACAH,MAAM,CAACe,MAAP,CAAgBZ,MAAhB,CACAH,MAAM,CAACgB,KAAP,CAAeb,MAAf,CACD,CAJM,IAIA,IAAID,MAAJ,CAAY,CACjB,GAAI,MAAOA,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CAC9B,GAAMe,CAAAA,OAAO,CAAGhB,WAAW,CAACC,MAAD,CAA3B,CAEA,GAAIe,OAAJ,CAAa,CACXjB,MAAM,CAACc,YAAP,CAAsBG,OAAtB,CACD,CAFD,IAEO,CACL,GAAIf,MAAM,GAAK,SAAf,CAA0B,CACxB,GAAMa,CAAAA,MAAM,CAAG,oBAAIhB,KAAJ,CAAW,CAAC,MAAD,CAAS,QAAT,CAAX,CAAf,CACA,GAAMiB,CAAAA,KAAK,CAAG,oBAAIjB,KAAJ,CAAW,CAAC,MAAD,CAAS,OAAT,CAAX,CAAd,CAEA,GAAI,MAAOgB,CAAAA,MAAP,GAAkB,QAAlB,EAA8B,MAAOC,CAAAA,KAAP,GAAiB,QAAnD,CAA6D,CAC3DhB,MAAM,CAACc,YAAP,CAAsB,KAAtB,CACD,CACF,CACF,CACF,CAfD,IAeO,IAAI,MAAOZ,CAAAA,MAAP,GAAkB,SAAtB,CAAiC,CACtC,GAAMgB,CAAAA,IAAI,CAAG,oBAAIjB,WAAJ,CAAiB,MAAjB,CAAb,CAEA,GAAIiB,IAAJ,CAAU,CACRlB,MAAM,CAACc,YAAP,CAAsBI,IAAtB,CACD,CACF,CANM,IAMA,IAAI,MAAOhB,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CACrCF,MAAM,CAACc,YAAP,CAAsBZ,MAAtB,CACD,CACF,CACF,CAED,MAAO,CACLW,KAAK,CAAEb,MADF,CAELK,QAAQ,CAAEC,WAFL,CAAP,CAID,CAtEM,C","sourcesContent":["// TODO: Update this code\n\nimport get from 'lodash.get';\nimport { Image } from 'react-native';\nimport * as React from 'react';\n\nimport { ITheme } from '../../types/ITheme';\nimport { RadiusType } from '../../types/Radius';\n\ninterface IProps {\n  radius?: RadiusType;\n  theme: ITheme;\n  circle?: number;\n  size: {\n    height?: number | string;\n    width?: number | string;\n  };\n  avatar?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const radiusUtils = (props: IProps) => {\n  const _style: {\n    borderRadius?: number;\n    height?: number;\n    width?: number;\n  } = {};\n\n  const themeRadius = get(props, ['theme', 'radius']);\n\n  const radius = get(props, 'radius');\n  const circle = get(props, 'circle');\n  const avatar = get(props, 'avatar');\n  const children = get(props, 'children');\n\n  let newChildren = children;\n\n  if (themeRadius) {\n    if (\n      avatar &&\n      typeof circle === 'number' &&\n      children &&\n      React.Children.only(children).valueOf() === Image\n    ) {\n      // @ts-ignore\n      newChildren = React.cloneElement(React.Children.only(children), {\n        style: {\n          borderRadius: circle / 2,\n          height: circle,\n          width: circle,\n        },\n      });\n      _style.borderRadius = circle / 2;\n      _style.height = circle;\n      _style.width = circle;\n    } else if (typeof circle === 'number') {\n      _style.borderRadius = circle / 2;\n      _style.height = circle;\n      _style.width = circle;\n    } else if (radius) {\n      if (typeof radius === 'string') {\n        const _radius = themeRadius[radius];\n\n        if (_radius) {\n          _style.borderRadius = _radius;\n        } else {\n          if (radius === 'rounded') {\n            const height = get(props, ['size', 'height']);\n            const width = get(props, ['size', 'width']);\n\n            if (typeof height === 'number' && typeof width === 'number') {\n              _style.borderRadius = 99999;\n            }\n          }\n        }\n      } else if (typeof radius === 'boolean') {\n        const base = get(themeRadius, 'base');\n\n        if (base) {\n          _style.borderRadius = base;\n        }\n      } else if (typeof radius === 'number') {\n        _style.borderRadius = radius;\n      }\n    }\n  }\n\n  return {\n    style: _style,\n    children: newChildren,\n  };\n};\n"]}