{"version":3,"sources":["rows.ts"],"names":["boxRowsUtils","props","newChild","children","rows","Array","isArray","React","Children","map","child","i","type","Box","cloneElement","f","Error"],"mappings":"6PAAA,0DACA,oDAEA,iEAOO,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAmB,CAC7C,GAAIC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,QAArB,CAEA,GAAMC,CAAAA,IAAI,CAAG,oBAAIH,KAAJ,CAAW,MAAX,CAAb,CAEA,GAAIG,IAAI,EAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAZ,CAAiC,CAC/BF,QAAQ,CAAGK,KAAK,CAACC,QAAN,CAAeC,GAAf,CAETR,KAAK,CAACE,QAFG,CAGT,SAACO,KAAD,CAA4BC,CAA5B,CAAkC,CAChC,GAAID,KAAK,CAACE,IAAN,GAAeC,YAAnB,CAAwB,CACtB,MAAON,CAAAA,KAAK,CAACO,YAAN,CAAmBJ,KAAnB,CAA0B,CAC/BK,CAAC,CAAEX,IAAI,CAACO,CAAD,CAAJ,EAAW,CADiB,CAA1B,CAAP,CAGD,CAED,KAAM,IAAIK,CAAAA,KAAJ,CAAU,iDAAV,CAAN,CACD,CAXQ,CAAX,CAaD,CAED,MAAOd,CAAAA,QAAP,CACD,CAtBM,C","sourcesContent":["import get from 'lodash.get';\nimport * as React from 'react';\n\nimport Box from '../../components/Box';\n\ninterface IProps {\n  rows?: number[];\n  children?: React.ReactNode;\n}\n\nexport const boxRowsUtils = (props: IProps) => {\n  let newChild = props.children;\n\n  const rows = get(props, 'rows');\n\n  if (rows && Array.isArray(rows)) {\n    newChild = React.Children.map(\n      // @ts-ignore\n      props.children,\n      (child: React.ReactElement, i) => {\n        if (child.type === Box) {\n          return React.cloneElement(child, {\n            f: rows[i] || 1,\n          });\n        }\n\n        throw new Error('Each child for a Box with rows need to be a Box');\n      },\n    );\n  }\n\n  return newChild;\n};\n"]}