{"version":3,"sources":["opacity.ts"],"names":["opacityUtils","props","_style","opacity","themeOpacity","_opacity"],"mappings":"wKAAA,0DAUO,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAmB,CAC7C,GAAIC,CAAAA,MAEH,CAAG,EAFJ,CAIA,GAAMC,CAAAA,OAAO,CAAG,oBAAIF,KAAJ,CAAW,GAAX,CAAhB,CAEA,GAAI,MAAOE,CAAAA,OAAP,GAAmB,QAAvB,CAAiC,CAC/B,GAAMC,CAAAA,YAAY,CAAG,oBAAIH,KAAJ,CAAW,CAAC,OAAD,CAAU,SAAV,CAAX,CAArB,CAEA,GAAIG,YAAJ,CAAkB,CAChB,GAAMC,CAAAA,QAAQ,CAAGD,YAAY,CAACD,OAAD,CAA7B,CAEA,GAAIE,QAAJ,CAAc,CACZH,MAAM,CAACC,OAAP,CAAiBE,QAAjB,CACD,CACF,CACF,CAVD,IAUO,IAAI,MAAOF,CAAAA,OAAP,GAAmB,QAAvB,CAAiC,CACtCD,MAAM,CAACC,OAAP,CAAiBA,OAAjB,CACD,CAED,MAAOD,CAAAA,MAAP,CACD,CAtBM,C","sourcesContent":["import get from 'lodash.get';\n\nimport { ITheme } from '../types/ITheme';\nimport { OpacityType } from '../types/OpacityType';\n\ninterface IProps {\n  theme: ITheme;\n  o?: number | OpacityType | string;\n}\n\nexport const opacityUtils = (props: IProps) => {\n  let _style: {\n    opacity?: number;\n  } = {};\n\n  const opacity = get(props, 'o');\n\n  if (typeof opacity === 'string') {\n    const themeOpacity = get(props, ['theme', 'opacity']);\n\n    if (themeOpacity) {\n      const _opacity = themeOpacity[opacity];\n\n      if (_opacity) {\n        _style.opacity = _opacity;\n      }\n    }\n  } else if (typeof opacity === 'number') {\n    _style.opacity = opacity;\n  }\n\n  return _style;\n};\n"]}