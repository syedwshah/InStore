{"version":3,"sources":["WrappedComponent.tsx"],"names":["getDisplayName","wrappedComponent","displayName","name","connect","Cp","val","props","React","PureComponent"],"mappings":"kyBAAA,oDAEA,qC,qHAOA,QAASA,CAAAA,cAAT,CAAwBC,gBAAxB,CAA6E,CAC3E,MACE,WAAWA,gBAAgB,CAACC,WAA5B,iBACWD,gBAAgB,CAACE,IAD5B,MAEA,WAHF,CAKD,CAED,QAASC,CAAAA,OAAT,CAA6BC,EAA7B,CAA2E,kBACzE,0VAGW,gBACP,MACE,qBAAC,6BAAD,CAAqB,QAArB,kDACG,SAAAC,GAAG,QAAI,qBAAC,EAAD,wBAAI,KAAK,CAAEA,GAAX,EAAoB,KAAI,CAACC,KAAzB,mDAAJ,EADN,CADF,CAKD,CATH,oBAAqBC,KAAK,CAACC,aAA3B,SACSP,WADT,CACuBF,cAAc,CAACK,EAAD,CADrC,OAWD,C,aAEcD,O","sourcesContent":["import * as React from 'react';\n\nimport { UtilityThemeContext } from '../Provider';\nimport { ITheme } from '../types/ITheme';\n\nexport interface IProps {\n  theme: ITheme;\n}\n\nfunction getDisplayName(wrappedComponent: React.ComponentType<IProps & any>) {\n  return (\n    `Utility(${wrappedComponent.displayName})` ||\n    `Utility(${wrappedComponent.name})` ||\n    'Component'\n  );\n}\n\nfunction connect<OuterProps>(Cp: React.ComponentType<OuterProps & IProps>) {\n  return class extends React.PureComponent<OuterProps> {\n    static displayName = getDisplayName(Cp);\n\n    render() {\n      return (\n        <UtilityThemeContext.Consumer>\n          {val => <Cp theme={val} {...this.props} />}\n        </UtilityThemeContext.Consumer>\n      );\n    }\n  };\n}\n\nexport default connect;\n"]}