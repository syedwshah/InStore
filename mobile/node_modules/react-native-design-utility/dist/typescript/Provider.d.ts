import * as React from 'react';
export declare const UtilityThemeContext: React.Context<{
    text: {
        size: {
            sm: number;
            base: number;
            md: number;
            lg: number;
            xl: number;
        };
        weight: {
            light: string;
            normal: string;
            bold: string;
        };
        spacing: {
            tight: number;
            normal: number;
            wide: number;
        };
        lineHeight: {
            none: number;
            tight: number;
            normal: number;
            large: number;
        };
        fonts: {
            base: null;
        };
    };
    color: {
        black: string;
        greyDarkest: string;
        greyDarker: string;
        greyDark: string;
        grey: string;
        greyLight: string;
        greyLighter: string;
        greyLightest: string;
        white: string;
        redDarkest: string;
        redDarker: string;
        redDark: string;
        red: string;
        redLight: string;
        redLighter: string;
        redLightest: string;
        blueDarkest: string;
        blueDarker: string;
        blueDark: string;
        blue: string;
        blueLight: string;
        blueLighter: string;
        blueLightest: string;
        purpleDarkest: string;
        purpleDarker: string;
        purpleDark: string;
        purple: string;
        purpleLight: string;
        purpleLighter: string;
        purpleLightest: string;
        greenDarkest: string;
        greenDarker: string;
        greenDark: string;
        green: string;
        greenLight: string;
        greenLighter: string;
        greenLightest: string;
    };
    space: {
        xs: number;
        sm: number;
        md: number;
        lg: number;
        xl: number;
    };
    radius: {
        xs: number;
        sm: number;
        base: number;
        lg: number;
        xl: number;
    };
    opacity: {
        none: number;
        low: number;
        demi: number;
        high: number;
        base: number;
    };
    shadows: {
        shadowColor: string;
        shadowOffset: {
            width: number;
            height: number;
        };
        shadowOpacity: number;
        shadowRadius: number;
    }[];
    borders: {
        borderWidth: number;
        borderColor: string;
    }[];
    button: {
        disabled: {
            opacity: number;
        };
    };
}>;
interface IProps {
    theme?: any;
}
export declare class UtilityThemeProvider extends React.Component<IProps> {
    static defaultProps: {
        theme: null;
    };
    state: {
        theme: any;
    };
    render(): JSX.Element;
}
export {};
