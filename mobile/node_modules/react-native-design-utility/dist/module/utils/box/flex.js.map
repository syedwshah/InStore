{"version":3,"sources":["flex.ts"],"names":["get","boxFlexUtils","props","_style","f","flex","dir","flexDirection","align","alignItems","justify","justifyContent","self","alignSelf","flexWrap"],"mappings":"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","sourcesContent":["import { FlexAlignType } from 'react-native';\nimport get from 'lodash.get';\n\nimport {\n  JustifyContentType,\n  FlexDirectionType,\n  DirType,\n  AlignType,\n  JustifyType,\n  AlignSelfType,\n  SelfType,\n  FlexWrapType,\n} from '../../types/Flex';\n\ninterface IProps {\n  f?: number;\n  dir?: DirType;\n  align?: AlignType;\n  justify?: JustifyType;\n  self?: SelfType;\n  flexWrap?: FlexWrapType;\n}\n\nexport const boxFlexUtils = (props: IProps) => {\n  const _style: {\n    flexDirection?: FlexDirectionType;\n    alignItems?: FlexAlignType;\n    justifyContent?: JustifyContentType;\n    alignSelf?: AlignSelfType;\n    flex?: number;\n    flexWrap?: FlexWrapType;\n  } = {};\n\n  if (props.f && typeof props.f === 'number') {\n    _style.flex = props.f;\n  }\n\n  const dir = get(props, 'dir');\n\n  if (dir) {\n    if (dir === 'row') {\n      _style.flexDirection = 'row';\n    } else if (dir === 'row-reverse') {\n      _style.flexDirection = 'row-reverse';\n    } else if (dir === 'col') {\n      _style.flexDirection = 'column';\n    } else if (dir === 'col-reverse') {\n      _style.flexDirection = 'column-reverse';\n    }\n  }\n\n  const align = get(props, 'align');\n\n  if (align) {\n    if (align === 'center') {\n      _style.alignItems = 'center';\n    } else if (align === 'start') {\n      _style.alignItems = 'flex-start';\n    } else if (align === 'end') {\n      _style.alignItems = 'flex-end';\n    } else if (align === 'stretch') {\n      _style.alignItems = 'stretch';\n    } else if (align === 'baseline') {\n      _style.alignItems = 'baseline';\n    }\n  }\n\n  const justify = get(props, 'justify');\n\n  if (justify) {\n    if (justify === 'center') {\n      _style.justifyContent = 'center';\n    } else if (justify === 'start') {\n      _style.justifyContent = 'flex-start';\n    } else if (justify === 'end') {\n      _style.justifyContent = 'flex-end';\n    } else if (justify === 'between') {\n      _style.justifyContent = 'space-between';\n    } else if (justify === 'around') {\n      _style.justifyContent = 'space-around';\n    } else if (justify === 'evenly') {\n      _style.justifyContent = 'space-evenly';\n    }\n  }\n\n  const self = get(props, 'self');\n\n  if (self) {\n    if (self === 'center') {\n      _style.alignSelf = 'center';\n    } else if (self === 'start') {\n      _style.alignSelf = 'flex-start';\n    } else if (self === 'end') {\n      _style.alignSelf = 'flex-end';\n    } else if (self === 'stretch') {\n      _style.alignSelf = 'stretch';\n    } else if (self === 'auto') {\n      _style.alignSelf = 'auto';\n    } else if (self === 'baseline') {\n      _style.alignSelf = 'baseline';\n    }\n  }\n\n  const flexWrap = get(props, 'flexWrap');\n\n  if (flexWrap) {\n    _style.flexWrap = flexWrap;\n  }\n\n  return _style;\n};\n"]}