{"ast":null,"code":"import get from 'lodash.get';\n\nvar capitalizeText = function capitalizeText(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nvar capitalizeEachWords = function capitalizeEachWords(str) {\n  return str.split(' ').map(capitalizeText).join(' ').trim();\n};\n\nvar thousandSeparator = function thousandSeparator(str) {\n  return String(str).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport var manipulationUtils = function manipulationUtils(props) {\n  var newChild = props.children;\n\n  if (typeof props.children === 'string') {\n    var uppercase = get(props, 'uppercase');\n    var lowercase = get(props, 'lowercase');\n    var capitalize = get(props, 'capitalize');\n    var capitalizeEach = get(props, 'capitalizeEach');\n    var thousand = get(props, 'thousand');\n\n    if (uppercase) {\n      newChild = props.children.toUpperCase();\n    }\n\n    if (lowercase) {\n      newChild = props.children.toLowerCase();\n    }\n\n    if (capitalize) {\n      newChild = capitalizeText(props.children);\n    }\n\n    if (capitalizeEach) {\n      newChild = capitalizeEachWords(props.children);\n    }\n\n    if (thousand) {\n      newChild = thousandSeparator(props.children);\n    }\n  }\n\n  return newChild;\n};","map":{"version":3,"sources":["manipulation.ts"],"names":["capitalizeText","str","capitalizeEachWords","thousandSeparator","String","manipulationUtils","newChild","props","uppercase","get","lowercase","capitalize","capitalizeEach","thousand"],"mappings":"AAAA,OAAA,GAAA,MAAA,YAAA;;AAGA,IAAMA,cAAc,GAAdA,SAAAA,cAAAA,CAAiB,GAAjBA,EAAiB;AAAA,SACrBC,GAAG,CAAHA,MAAAA,CAAAA,CAAAA,EAAAA,WAAAA,KAA8BA,GAAG,CAAHA,KAAAA,CADT,CACSA,CADT;AAAvB,CAAA;;AAGA,IAAMC,mBAAmB,GAAnBA,SAAAA,mBAAAA,CAAsB,GAAtBA,EAAsB;AAAA,SAC1BD,GAAG,CAAHA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,CAAAA,cAAAA,EAAAA,IAAAA,CAAAA,GAAAA,EAD0B,IAC1BA,EAD0B;AAA5B,CAAA;;AAOA,IAAME,iBAAiB,GAAjBA,SAAAA,iBAAAA,CAAoB,GAApBA,EAAoB;AAAA,SACxBC,MAAM,CAANA,GAAM,CAANA,CAAAA,OAAAA,CAAAA,uBAAAA,EADwB,GACxBA,CADwB;AAA1B,CAAA;;AAYA,OAAO,IAAMC,iBAAiB,GAAjBA,SAAAA,iBAAAA,CAAoB,KAApBA,EAAuC;AAClD,MAAIC,QAAQ,GAAGC,KAAK,CAApB,QAAA;;AAEA,MAAI,OAAOA,KAAK,CAAZ,QAAA,KAAJ,QAAA,EAAwC;AACtC,QAAMC,SAAS,GAAGC,GAAG,CAAA,KAAA,EAArB,WAAqB,CAArB;AACA,QAAMC,SAAS,GAAGD,GAAG,CAAA,KAAA,EAArB,WAAqB,CAArB;AACA,QAAME,UAAU,GAAGF,GAAG,CAAA,KAAA,EAAtB,YAAsB,CAAtB;AACA,QAAMG,cAAc,GAAGH,GAAG,CAAA,KAAA,EAA1B,gBAA0B,CAA1B;AACA,QAAMI,QAAQ,GAAGJ,GAAG,CAAA,KAAA,EAApB,UAAoB,CAApB;;AAEA,QAAA,SAAA,EAAe;AACbH,MAAAA,QAAQ,GAAGC,KAAK,CAALA,QAAAA,CAAXD,WAAWC,EAAXD;AAGF;;AAAA,QAAA,SAAA,EAAe;AACbA,MAAAA,QAAQ,GAAGC,KAAK,CAALA,QAAAA,CAAXD,WAAWC,EAAXD;AAGF;;AAAA,QAAA,UAAA,EAAgB;AACdA,MAAAA,QAAQ,GAAGN,cAAc,CAACO,KAAK,CAA/BD,QAAyB,CAAzBA;AAGF;;AAAA,QAAA,cAAA,EAAoB;AAClBA,MAAAA,QAAQ,GAAGJ,mBAAmB,CAACK,KAAK,CAApCD,QAA8B,CAA9BA;AAGF;;AAAA,QAAA,QAAA,EAAc;AACZA,MAAAA,QAAQ,GAAGH,iBAAiB,CAACI,KAAK,CAAlCD,QAA4B,CAA5BA;AAEH;AAED;;AAAA,SAAA,QAAA;AA/BK,CAAA","sourcesContent":["import get from 'lodash.get';\nimport React from 'react';\n\nconst capitalizeText = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nconst capitalizeEachWords = (str: string) =>\n  str\n    .split(' ')\n    .map(capitalizeText)\n    .join(' ')\n    .trim();\n\nconst thousandSeparator = (str: string | number) =>\n  String(str).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\ninterface IProps {\n  capitalize?: boolean;\n  capitalizeEach?: boolean;\n  uppercase?: boolean;\n  lowercase?: boolean;\n  thousand?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const manipulationUtils = (props: IProps) => {\n  let newChild = props.children;\n\n  if (typeof props.children === 'string') {\n    const uppercase = get(props, 'uppercase');\n    const lowercase = get(props, 'lowercase');\n    const capitalize = get(props, 'capitalize');\n    const capitalizeEach = get(props, 'capitalizeEach');\n    const thousand = get(props, 'thousand');\n\n    if (uppercase) {\n      newChild = props.children.toUpperCase();\n    }\n\n    if (lowercase) {\n      newChild = props.children.toLowerCase();\n    }\n\n    if (capitalize) {\n      newChild = capitalizeText(props.children);\n    }\n\n    if (capitalizeEach) {\n      newChild = capitalizeEachWords(props.children);\n    }\n\n    if (thousand) {\n      newChild = thousandSeparator(props.children);\n    }\n  }\n\n  return newChild;\n};\n"]},"metadata":{},"sourceType":"module"}