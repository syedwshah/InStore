{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport getSceneIndicesForInterpolationInputRange from \"../../utils/getSceneIndicesForInterpolationInputRange\";\n\nfunction hasHeader(scene) {\n  if (!scene) {\n    return true;\n  }\n\n  var descriptor = scene.descriptor;\n  return descriptor.options.header !== null;\n}\n\nvar crossFadeInterpolation = function crossFadeInterpolation(scenes, first, index, last) {\n  return {\n    inputRange: [first, first + 0.001, index - 0.9, index - 0.2, index, last - 0.001, last],\n    outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0.3 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0 : 1, 0]\n  };\n};\n\nfunction isGoingBack(scenes) {\n  var lastSceneIndexInScenes = scenes.length - 1;\n  return !scenes[lastSceneIndexInScenes].isActive;\n}\n\nfunction forLayout(props) {\n  var layout = props.layout,\n      position = props.position,\n      scene = props.scene,\n      scenes = props.scenes,\n      mode = props.mode;\n\n  if (mode !== 'float') {\n    return {};\n  }\n\n  var isBack = isGoingBack(scenes);\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {};\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var width = layout.initWidth || Dimensions.get('window').width;\n\n  if (isBack && !hasHeader(scenes[index]) && !hasHeader(scenes[last]) || !isBack && !hasHeader(scenes[first]) && !hasHeader(scenes[index])) {\n    return {\n      transform: [{\n        translateX: width\n      }]\n    };\n  }\n\n  var rtlMult = I18nManager.isRTL ? -1 : 1;\n  var translateX = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [rtlMult * (hasHeader(scenes[first]) ? 0 : width), rtlMult * (hasHeader(scenes[index]) ? 0 : isBack ? width : -width), rtlMult * (hasHeader(scenes[last]) ? 0 : -width)]\n  });\n  return {\n    transform: [{\n      translateX: translateX\n    }]\n  };\n}\n\nfunction forLeft(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  return {\n    opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))\n  };\n}\n\nfunction forCenter(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  return {\n    opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))\n  };\n}\n\nfunction forRight(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  return {\n    opacity: position.interpolate(crossFadeInterpolation(scenes, first, index, last))\n  };\n}\n\nfunction forLeftButton(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var inputRange = [first, first + 0.001, first + Math.abs(index - first) / 2, index, last - Math.abs(last - index) / 2, last - 0.001, last];\n  var outputRange = [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0.1 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0.1 : 1, hasHeader(scenes[last]) ? 0 : 1, 0];\n  return {\n    opacity: position.interpolate({\n      inputRange: inputRange,\n      outputRange: outputRange\n    })\n  };\n}\n\nvar LEFT_LABEL_OFFSET = Dimensions.get('window').width / 2 - 70 - 25;\n\nfunction forLeftLabel(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var offset = LEFT_LABEL_OFFSET;\n  return {\n    opacity: position.interpolate({\n      inputRange: [first, first + 0.001, index - 0.35, index, index + 0.5, last - 0.001, last],\n      outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0.5 : 1, hasHeader(scenes[last]) ? 0 : 1, 0]\n    }),\n    transform: [{\n      translateX: position.interpolate({\n        inputRange: [first, first + 0.001, index, last - 0.001, last],\n        outputRange: I18nManager.isRTL ? [-offset * 1.5, hasHeader(scenes[first]) ? -offset * 1.5 : 0, 0, hasHeader(scenes[last]) ? offset : 0, offset] : [offset, hasHeader(scenes[first]) ? offset : 0, 0, hasHeader(scenes[last]) ? -offset * 1.5 : 0, -offset * 1.5]\n      })\n    }]\n  };\n}\n\nvar TITLE_OFFSET_IOS = Dimensions.get('window').width / 2 - 70 + 25;\n\nfunction forCenterFromLeft(props) {\n  var position = props.position,\n      scene = props.scene,\n      scenes = props.scenes;\n  var interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {\n    opacity: 0\n  };\n  var first = interpolate.first,\n      last = interpolate.last;\n  var index = scene.index;\n  var inputRange = [first, index - 0.5, index, index + 0.5, last];\n  var offset = TITLE_OFFSET_IOS;\n  return {\n    opacity: position.interpolate({\n      inputRange: [first, first + 0.001, index - 0.5, index, index + 0.7, last - 0.001, last],\n      outputRange: [0, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[first]) ? 0 : 1, hasHeader(scenes[index]) ? 1 : 0, hasHeader(scenes[last]) ? 0 : 1, hasHeader(scenes[last]) ? 0 : 1, 0]\n    }),\n    transform: [{\n      translateX: position.interpolate({\n        inputRange: [first, first + 0.001, index, last - 0.001, last],\n        outputRange: I18nManager.isRTL ? [-offset, hasHeader(scenes[first]) ? -offset : 0, 0, hasHeader(scenes[last]) ? offset : 0, offset] : [offset, hasHeader(scenes[first]) ? offset : 0, 0, hasHeader(scenes[last]) ? -offset : 0, -offset]\n      })\n    }]\n  };\n}\n\nexport default {\n  forLayout: forLayout,\n  forLeft: forLeft,\n  forLeftButton: forLeftButton,\n  forLeftLabel: forLeftLabel,\n  forCenterFromLeft: forCenterFromLeft,\n  forCenter: forCenter,\n  forRight: forRight\n};","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation/src/views/Header/HeaderStyleInterpolator.js"],"names":["getSceneIndicesForInterpolationInputRange","hasHeader","scene","descriptor","options","header","crossFadeInterpolation","scenes","first","index","last","inputRange","outputRange","isGoingBack","lastSceneIndexInScenes","length","isActive","forLayout","props","layout","position","mode","isBack","interpolate","width","initWidth","Dimensions","get","transform","translateX","rtlMult","I18nManager","isRTL","forLeft","opacity","forCenter","forRight","forLeftButton","Math","abs","LEFT_LABEL_OFFSET","forLeftLabel","offset","TITLE_OFFSET_IOS","forCenterFromLeft"],"mappings":"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","sourcesContent":["import { Dimensions, I18nManager } from 'react-native';\nimport getSceneIndicesForInterpolationInputRange from '../../utils/getSceneIndicesForInterpolationInputRange';\n\nfunction hasHeader(scene) {\n  if (!scene) {\n    return true;\n  }\n  const { descriptor } = scene;\n  return descriptor.options.header !== null;\n}\n\nconst crossFadeInterpolation = (scenes, first, index, last) => ({\n  inputRange: [\n    first,\n    first + 0.001,\n    index - 0.9,\n    index - 0.2,\n    index,\n    last - 0.001,\n    last,\n  ],\n  outputRange: [\n    0,\n    hasHeader(scenes[first]) ? 0 : 1,\n    hasHeader(scenes[first]) ? 0 : 1,\n    hasHeader(scenes[first]) ? 0.3 : 1,\n    hasHeader(scenes[index]) ? 1 : 0,\n    hasHeader(scenes[last]) ? 0 : 1,\n    0,\n  ],\n});\n\n/**\n * Utilities that build the style for the navigation header.\n *\n * +-------------+-------------+-------------+\n * |             |             |             |\n * |    Left     |   Title     |   Right     |\n * |  Component  |  Component  | Component   |\n * |             |             |             |\n * +-------------+-------------+-------------+\n */\n\nfunction isGoingBack(scenes) {\n  const lastSceneIndexInScenes = scenes.length - 1;\n  return !scenes[lastSceneIndexInScenes].isActive;\n}\n\nfunction forLayout(props) {\n  const { layout, position, scene, scenes, mode } = props;\n  if (mode !== 'float') {\n    return {};\n  }\n  const isBack = isGoingBack(scenes);\n\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n  if (!interpolate) return {};\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  // We really shouldn't render the scene at all until we know the width of the\n  // stack. That said, in every case that I have ever seen, this has just been\n  // the full width of the window. This won't continue to be true if we support\n  // layouts like iPad master-detail. For now, in order to solve\n  // https://github.com/react-navigation/react-navigation/issues/4264, I have\n  // opted for the heuristic that we will use the window width until we have\n  // measured (and they will usually be the same).\n  const width = layout.initWidth || Dimensions.get('window').width;\n\n  // Make sure the header stays hidden when transitioning between 2 screens\n  // with no header.\n  if (\n    (isBack && !hasHeader(scenes[index]) && !hasHeader(scenes[last])) ||\n    (!isBack && !hasHeader(scenes[first]) && !hasHeader(scenes[index]))\n  ) {\n    return {\n      transform: [{ translateX: width }],\n    };\n  }\n\n  const rtlMult = I18nManager.isRTL ? -1 : 1;\n  const translateX = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [\n      rtlMult * (hasHeader(scenes[first]) ? 0 : width),\n      rtlMult * (hasHeader(scenes[index]) ? 0 : isBack ? width : -width),\n      rtlMult * (hasHeader(scenes[last]) ? 0 : -width),\n    ],\n  });\n\n  return {\n    transform: [{ translateX }],\n  };\n}\n\nfunction forLeft(props) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  return {\n    opacity: position.interpolate(\n      crossFadeInterpolation(scenes, first, index, last)\n    ),\n  };\n}\n\nfunction forCenter(props) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  return {\n    opacity: position.interpolate(\n      crossFadeInterpolation(scenes, first, index, last)\n    ),\n  };\n}\n\nfunction forRight(props) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  return {\n    opacity: position.interpolate(\n      crossFadeInterpolation(scenes, first, index, last)\n    ),\n  };\n}\n\n/**\n * iOS UINavigationController style interpolators\n */\n\nfunction forLeftButton(props) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  // The gist of what we're doing here is animating the left button _normally_ (fast fade)\n  // when both scenes in transition have headers. When the current, next, or previous scene _don't_\n  // have a header, we don't fade the button, and only set it's opacity to 0 at the last moment\n  // of the transition.\n  const inputRange = [\n    first,\n    first + 0.001,\n    first + Math.abs(index - first) / 2,\n    index,\n    last - Math.abs(last - index) / 2,\n    last - 0.001,\n    last,\n  ];\n  const outputRange = [\n    0,\n    hasHeader(scenes[first]) ? 0 : 1,\n    hasHeader(scenes[first]) ? 0.1 : 1,\n    hasHeader(scenes[index]) ? 1 : 0,\n    hasHeader(scenes[last]) ? 0.1 : 1,\n    hasHeader(scenes[last]) ? 0 : 1,\n    0,\n  ];\n\n  return {\n    opacity: position.interpolate({\n      inputRange,\n      outputRange,\n    }),\n  };\n}\n\n/*\n * NOTE: this offset calculation is an approximation that gives us\n * decent results in many cases, but it is ultimately a poor substitute\n * for text measurement. See the comment on title for more information.\n *\n * - 70 is the width of the left button area.\n * - 25 is the width of the left button icon (to account for label offset)\n */\nconst LEFT_LABEL_OFFSET = Dimensions.get('window').width / 2 - 70 - 25;\nfunction forLeftLabel(props) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  const offset = LEFT_LABEL_OFFSET;\n\n  // Similarly to the animation of the left label, when animating to or from a scene without\n  // a header, we keep the label at full opacity and in the same position for as long as possible.\n  return {\n    // For now we fade out the label before fading in the title, so the\n    // differences between the label and title position can be hopefully not so\n    // noticable to the user\n    opacity: position.interpolate({\n      inputRange: [\n        first,\n        first + 0.001,\n        index - 0.35,\n        index,\n        index + 0.5,\n        last - 0.001,\n        last,\n      ],\n      outputRange: [\n        0,\n        hasHeader(scenes[first]) ? 0 : 1,\n        hasHeader(scenes[first]) ? 0 : 1,\n        hasHeader(scenes[index]) ? 1 : 0,\n        hasHeader(scenes[last]) ? 0.5 : 1,\n        hasHeader(scenes[last]) ? 0 : 1,\n        0,\n      ],\n    }),\n    transform: [\n      {\n        translateX: position.interpolate({\n          inputRange: [first, first + 0.001, index, last - 0.001, last],\n          outputRange: I18nManager.isRTL\n            ? [\n                -offset * 1.5,\n                hasHeader(scenes[first]) ? -offset * 1.5 : 0,\n                0,\n                hasHeader(scenes[last]) ? offset : 0,\n                offset,\n              ]\n            : [\n                offset,\n                hasHeader(scenes[first]) ? offset : 0,\n                0,\n                hasHeader(scenes[last]) ? -offset * 1.5 : 0,\n                -offset * 1.5,\n              ],\n        }),\n      },\n    ],\n  };\n}\n\n/*\n * NOTE: this offset calculation is a an approximation that gives us\n * decent results in many cases, but it is ultimately a poor substitute\n * for text measurement. We want the back button label to transition\n * smoothly into the title text and to do this we need to understand\n * where the title is positioned within the title container (since it is\n * centered).\n *\n * - 70 is the width of the left button area.\n * - 25 is the width of the left button icon (to account for label offset)\n */\nconst TITLE_OFFSET_IOS = Dimensions.get('window').width / 2 - 70 + 25;\nfunction forCenterFromLeft(props) {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const inputRange = [first, index - 0.5, index, index + 0.5, last];\n  const offset = TITLE_OFFSET_IOS;\n\n  return {\n    opacity: position.interpolate({\n      inputRange: [\n        first,\n        first + 0.001,\n        index - 0.5,\n        index,\n        index + 0.7,\n        last - 0.001,\n        last,\n      ],\n      outputRange: [\n        0,\n        hasHeader(scenes[first]) ? 0 : 1,\n        hasHeader(scenes[first]) ? 0 : 1,\n        hasHeader(scenes[index]) ? 1 : 0,\n        hasHeader(scenes[last]) ? 0 : 1,\n        hasHeader(scenes[last]) ? 0 : 1,\n        0,\n      ],\n    }),\n    transform: [\n      {\n        translateX: position.interpolate({\n          inputRange: [first, first + 0.001, index, last - 0.001, last],\n          outputRange: I18nManager.isRTL\n            ? [\n                -offset,\n                hasHeader(scenes[first]) ? -offset : 0,\n                0,\n                hasHeader(scenes[last]) ? offset : 0,\n                offset,\n              ]\n            : [\n                offset,\n                hasHeader(scenes[first]) ? offset : 0,\n                0,\n                hasHeader(scenes[last]) ? -offset : 0,\n                -offset,\n              ],\n        }),\n      },\n    ],\n  };\n}\n\nexport default {\n  forLayout,\n  forLeft,\n  forLeftButton,\n  forLeftLabel,\n  forCenterFromLeft,\n  forCenter,\n  forRight,\n};\n"]},"metadata":{},"sourceType":"module"}