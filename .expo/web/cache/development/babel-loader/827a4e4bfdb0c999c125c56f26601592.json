{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar deprecatedKeys = ['tabBar'];\nexport default (function (screenOptions, route) {\n  var keys = Object.keys(screenOptions);\n  var deprecatedKey = keys.find(function (key) {\n    return deprecatedKeys.includes(key);\n  });\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error([\"`title` cannot be defined as a function in navigation options for `\" + route.routeName + \"` screen. \\n\", 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error([\"`\" + deprecatedKey + \"` cannot be defined as a function in navigation options for `\" + route.routeName + \"` screen. \\n\", 'Try replacing the following:', '{', \"    \" + deprecatedKey + \": ({ state }) => ({\", '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', \"    \" + deprecatedKey + \"Key: navigation.state...\", '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error([\"Invalid key `\" + deprecatedKey + \"` defined in navigation options for `\" + route.routeName + \"` screen.\", '\\n', 'Try replacing the following navigation options:', '{', \"    \" + deprecatedKey + \": {\"].concat(_toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {\n      return \"        \" + key + \": ...,\";\n    })), ['    },', '}', '\\n', 'with:', '{'], _toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {\n      return \"    \" + (deprecatedKey + key[0].toUpperCase() + key.slice(1)) + \": ...,\";\n    })), ['}']).join('\\n'));\n  }\n});","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation/src/routers/validateScreenOptions.js"],"names":["deprecatedKeys","screenOptions","route","keys","Object","deprecatedKey","find","key","includes","title","Error","routeName","join","map","toUpperCase","slice"],"mappings":";AAAA,IAAMA,cAAc,GAAG,CAAC,QAAD,CAAvB;AAMA,gBAAe,UAACC,aAAD,EAAgBC,KAAhB,EAA0B;AACvC,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,aAAZ,CAAb;AAEA,MAAMI,aAAa,GAAGF,IAAI,CAACG,IAAL,CAAU,UAAAC,GAAG;AAAA,WAAIP,cAAc,CAACQ,QAAf,CAAwBD,GAAxB,CAAJ;AAAA,GAAb,CAAtB;;AAEA,MAAI,OAAON,aAAa,CAACQ,KAArB,KAA+B,UAAnC,EAA+C;AAC7C,UAAM,IAAIC,KAAJ,CACJ,yEAEIR,KAAK,CAACS,SAFV,mBAIE,8BAJF,EAKE,GALF,EAME,oCANF,EAOE,GAPF,EAQE,EARF,EASE,OATF,EAUE,wBAVF,EAWE,gCAXF,EAYE,IAZF,EAaEC,IAbF,CAaO,IAbP,CADI,CAAN;AAgBD;;AAED,MAAIP,aAAa,IAAI,OAAOJ,aAAa,CAACI,aAAD,CAApB,KAAwC,UAA7D,EAAyE;AACvE,UAAM,IAAIK,KAAJ,CACJ,OACOL,aADP,qEAEIH,KAAK,CAACS,SAFV,mBAIE,8BAJF,EAKE,GALF,WAMSN,aANT,0BAOE,wBAPF,EAQE,QARF,EASE,GATF,EAUE,EAVF,EAWE,OAXF,EAYE,wBAZF,WAaSA,aAbT,+BAcE,IAdF,EAeEO,IAfF,CAeO,IAfP,CADI,CAAN;AAkBD;;AAED,MAAIP,aAAa,IAAI,OAAOJ,aAAa,CAACI,aAAD,CAApB,KAAwC,QAA7D,EAAuE;AACrE,UAAM,IAAIK,KAAJ,CACJ,mBACmBL,aADnB,6CAEIH,KAAK,CAACS,SAFV,gBAIE,IAJF,EAKE,iDALF,EAME,GANF,WAOSN,aAPT,oCAQKD,MAAM,CAACD,IAAP,CAAYF,aAAa,CAACI,aAAD,CAAzB,EAA0CQ,GAA1C,CACD,UAAAN,GAAG;AAAA,0BAAeA,GAAf;AAAA,KADF,CARL,IAWE,QAXF,EAYE,GAZF,EAaE,IAbF,EAcE,OAdF,EAeE,GAfF,sBAgBKH,MAAM,CAACD,IAAP,CAAYF,aAAa,CAACI,aAAD,CAAzB,EAA0CQ,GAA1C,CACD,UAAAN,GAAG;AAAA,uBACMF,aAAa,GAAGE,GAAG,CAAC,CAAD,CAAH,CAAOO,WAAP,EAAhB,GAAuCP,GAAG,CAACQ,KAAJ,CAAU,CAAV,CAD7C;AAAA,KADF,CAhBL,IAoBE,GApBF,GAqBEH,IArBF,CAqBO,IArBP,CADI,CAAN;AAwBD;AACF,CAvED","sourcesContent":["const deprecatedKeys = ['tabBar'];\n\n/**\n * Make sure screen options returned by the `getScreenOption`\n * are valid\n */\nexport default (screenOptions, route) => {\n  const keys = Object.keys(screenOptions);\n\n  const deprecatedKey = keys.find(key => deprecatedKeys.includes(key));\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error(\n      [\n        `\\`title\\` cannot be defined as a function in navigation options for \\`${\n          route.routeName\n        }\\` screen. \\n`,\n        'Try replacing the following:',\n        '{',\n        '    title: ({ state }) => state...',\n        '}',\n        '',\n        'with:',\n        '({ navigation }) => ({',\n        '    title: navigation.state...',\n        '})',\n      ].join('\\n')\n    );\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error(\n      [\n        `\\`${deprecatedKey}\\` cannot be defined as a function in navigation options for \\`${\n          route.routeName\n        }\\` screen. \\n`,\n        'Try replacing the following:',\n        '{',\n        `    ${deprecatedKey}: ({ state }) => ({`,\n        '         key: state...',\n        '    })',\n        '}',\n        '',\n        'with:',\n        '({ navigation }) => ({',\n        `    ${deprecatedKey}Key: navigation.state...`,\n        '})',\n      ].join('\\n')\n    );\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error(\n      [\n        `Invalid key \\`${deprecatedKey}\\` defined in navigation options for \\`${\n          route.routeName\n        }\\` screen.`,\n        '\\n',\n        'Try replacing the following navigation options:',\n        '{',\n        `    ${deprecatedKey}: {`,\n        ...Object.keys(screenOptions[deprecatedKey]).map(\n          key => `        ${key}: ...,`\n        ),\n        '    },',\n        '}',\n        '\\n',\n        'with:',\n        '{',\n        ...Object.keys(screenOptions[deprecatedKey]).map(\n          key =>\n            `    ${deprecatedKey + key[0].toUpperCase() + key.slice(1)}: ...,`\n        ),\n        '}',\n      ].join('\\n')\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}