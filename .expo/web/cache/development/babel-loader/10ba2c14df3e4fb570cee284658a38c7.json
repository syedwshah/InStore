{"ast":null,"code":"import get from 'lodash.get';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as React from 'react';\nexport var radiusUtils = function radiusUtils(props) {\n  var _style = {};\n  var themeRadius = get(props, ['theme', 'radius']);\n  var radius = get(props, 'radius');\n  var circle = get(props, 'circle');\n  var avatar = get(props, 'avatar');\n  var children = get(props, 'children');\n  var newChildren = children;\n\n  if (themeRadius) {\n    if (avatar && typeof circle === 'number' && children && React.Children.only(children).valueOf() === Image) {\n      newChildren = React.cloneElement(React.Children.only(children), {\n        style: {\n          borderRadius: circle / 2,\n          height: circle,\n          width: circle\n        }\n      });\n      _style.borderRadius = circle / 2;\n      _style.height = circle;\n      _style.width = circle;\n    } else if (typeof circle === 'number') {\n      _style.borderRadius = circle / 2;\n      _style.height = circle;\n      _style.width = circle;\n    } else if (radius) {\n      if (typeof radius === 'string') {\n        var _radius = themeRadius[radius];\n\n        if (_radius) {\n          _style.borderRadius = _radius;\n        } else {\n          if (radius === 'rounded') {\n            var height = get(props, ['size', 'height']);\n            var width = get(props, ['size', 'width']);\n\n            if (typeof height === 'number' && typeof width === 'number') {\n              _style.borderRadius = 99999;\n            }\n          }\n        }\n      } else if (typeof radius === 'boolean') {\n        var base = get(themeRadius, 'base');\n\n        if (base) {\n          _style.borderRadius = base;\n        }\n      } else if (typeof radius === 'number') {\n        _style.borderRadius = radius;\n      }\n    }\n  }\n\n  return {\n    style: _style,\n    children: newChildren\n  };\n};","map":{"version":3,"sources":["radius.ts"],"names":["radiusUtils","_style","themeRadius","get","radius","circle","avatar","children","newChildren","React","style","borderRadius","height","width","_radius","base"],"mappings":"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","sourcesContent":["// TODO: Update this code\n\nimport get from 'lodash.get';\nimport { Image } from 'react-native';\nimport * as React from 'react';\n\nimport { ITheme } from '../../types/ITheme';\nimport { RadiusType } from '../../types/Radius';\n\ninterface IProps {\n  radius?: RadiusType;\n  theme: ITheme;\n  circle?: number;\n  size: {\n    height?: number | string;\n    width?: number | string;\n  };\n  avatar?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const radiusUtils = (props: IProps) => {\n  const _style: {\n    borderRadius?: number;\n    height?: number;\n    width?: number;\n  } = {};\n\n  const themeRadius = get(props, ['theme', 'radius']);\n\n  const radius = get(props, 'radius');\n  const circle = get(props, 'circle');\n  const avatar = get(props, 'avatar');\n  const children = get(props, 'children');\n\n  let newChildren = children;\n\n  if (themeRadius) {\n    if (\n      avatar &&\n      typeof circle === 'number' &&\n      children &&\n      React.Children.only(children).valueOf() === Image\n    ) {\n      // @ts-ignore\n      newChildren = React.cloneElement(React.Children.only(children), {\n        style: {\n          borderRadius: circle / 2,\n          height: circle,\n          width: circle,\n        },\n      });\n      _style.borderRadius = circle / 2;\n      _style.height = circle;\n      _style.width = circle;\n    } else if (typeof circle === 'number') {\n      _style.borderRadius = circle / 2;\n      _style.height = circle;\n      _style.width = circle;\n    } else if (radius) {\n      if (typeof radius === 'string') {\n        const _radius = themeRadius[radius];\n\n        if (_radius) {\n          _style.borderRadius = _radius;\n        } else {\n          if (radius === 'rounded') {\n            const height = get(props, ['size', 'height']);\n            const width = get(props, ['size', 'width']);\n\n            if (typeof height === 'number' && typeof width === 'number') {\n              _style.borderRadius = 99999;\n            }\n          }\n        }\n      } else if (typeof radius === 'boolean') {\n        const base = get(themeRadius, 'base');\n\n        if (base) {\n          _style.borderRadius = base;\n        }\n      } else if (typeof radius === 'number') {\n        _style.borderRadius = radius;\n      }\n    }\n  }\n\n  return {\n    style: _style,\n    children: newChildren,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}