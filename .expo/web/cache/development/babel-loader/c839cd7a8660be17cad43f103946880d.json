{"ast":null,"code":"import PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nexport var NavigationRoutePropType = PropTypes.shape({\n  title: PropTypes.string,\n  key: PropTypes.string.isRequired\n});\nexport var NavigationStatePropType = PropTypes.shape({\n  routes: PropTypes.arrayOf(NavigationRoutePropType).isRequired,\n  index: PropTypes.number.isRequired\n});\nexport var SceneRendererPropType = {\n  panX: PropTypes.object.isRequired,\n  offsetX: PropTypes.object.isRequired,\n  layout: PropTypes.shape({\n    measured: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }).isRequired,\n  navigationState: NavigationStatePropType.isRequired,\n  position: PropTypes.object.isRequired,\n  jumpTo: PropTypes.func.isRequired,\n  useNativeDriver: PropTypes.bool\n};\nexport var PagerRendererPropType = {\n  layout: PropTypes.shape({\n    measured: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }).isRequired,\n  navigationState: NavigationStatePropType.isRequired,\n  panX: PropTypes.instanceOf(Animated.Value).isRequired,\n  offsetX: PropTypes.instanceOf(Animated.Value).isRequired,\n  canJumpToTab: PropTypes.func.isRequired,\n  jumpTo: PropTypes.func.isRequired,\n  animationEnabled: PropTypes.bool,\n  swipeEnabled: PropTypes.bool,\n  useNativeDriver: PropTypes.bool,\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onAnimationEnd: PropTypes.func,\n  children: PropTypes.node.isRequired\n};","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation-tabs/node_modules/react-native-tab-view/src/PropTypes.js"],"names":["PropTypes","NavigationRoutePropType","shape","title","string","key","isRequired","NavigationStatePropType","routes","arrayOf","index","number","SceneRendererPropType","panX","object","offsetX","layout","measured","bool","height","width","navigationState","position","jumpTo","func","useNativeDriver","PagerRendererPropType","instanceOf","Animated","Value","canJumpToTab","animationEnabled","swipeEnabled","onSwipeStart","onSwipeEnd","onAnimationEnd","children","node"],"mappings":"AAEA,OAAOA,SAAP,MAAsB,YAAtB;;AAGA,OAAO,IAAMC,uBAAuB,GAAGD,SAAS,CAACE,KAAV,CAAgB;AACrDC,EAAAA,KAAK,EAAEH,SAAS,CAACI,MADoC;AAErDC,EAAAA,GAAG,EAAEL,SAAS,CAACI,MAAV,CAAiBE;AAF+B,CAAhB,CAAhC;AAKP,OAAO,IAAMC,uBAAuB,GAAGP,SAAS,CAACE,KAAV,CAAgB;AACrDM,EAAAA,MAAM,EAAER,SAAS,CAACS,OAAV,CAAkBR,uBAAlB,EAA2CK,UADE;AAErDI,EAAAA,KAAK,EAAEV,SAAS,CAACW,MAAV,CAAiBL;AAF6B,CAAhB,CAAhC;AAKP,OAAO,IAAMM,qBAAqB,GAAG;AACnCC,EAAAA,IAAI,EAAEb,SAAS,CAACc,MAAV,CAAiBR,UADY;AAEnCS,EAAAA,OAAO,EAAEf,SAAS,CAACc,MAAV,CAAiBR,UAFS;AAGnCU,EAAAA,MAAM,EAAEhB,SAAS,CAACE,KAAV,CAAgB;AACtBe,IAAAA,QAAQ,EAAEjB,SAAS,CAACkB,IAAV,CAAeZ,UADH;AAEtBa,IAAAA,MAAM,EAAEnB,SAAS,CAACW,MAAV,CAAiBL,UAFH;AAGtBc,IAAAA,KAAK,EAAEpB,SAAS,CAACW,MAAV,CAAiBL;AAHF,GAAhB,EAILA,UAPgC;AAQnCe,EAAAA,eAAe,EAAEd,uBAAuB,CAACD,UARN;AASnCgB,EAAAA,QAAQ,EAAEtB,SAAS,CAACc,MAAV,CAAiBR,UATQ;AAUnCiB,EAAAA,MAAM,EAAEvB,SAAS,CAACwB,IAAV,CAAelB,UAVY;AAWnCmB,EAAAA,eAAe,EAAEzB,SAAS,CAACkB;AAXQ,CAA9B;AAcP,OAAO,IAAMQ,qBAAqB,GAAG;AACnCV,EAAAA,MAAM,EAAEhB,SAAS,CAACE,KAAV,CAAgB;AACtBe,IAAAA,QAAQ,EAAEjB,SAAS,CAACkB,IAAV,CAAeZ,UADH;AAEtBa,IAAAA,MAAM,EAAEnB,SAAS,CAACW,MAAV,CAAiBL,UAFH;AAGtBc,IAAAA,KAAK,EAAEpB,SAAS,CAACW,MAAV,CAAiBL;AAHF,GAAhB,EAILA,UALgC;AAMnCe,EAAAA,eAAe,EAAEd,uBAAuB,CAACD,UANN;AAOnCO,EAAAA,IAAI,EAAEb,SAAS,CAAC2B,UAAV,CAAqBC,QAAQ,CAACC,KAA9B,EAAqCvB,UAPR;AAQnCS,EAAAA,OAAO,EAAEf,SAAS,CAAC2B,UAAV,CAAqBC,QAAQ,CAACC,KAA9B,EAAqCvB,UARX;AASnCwB,EAAAA,YAAY,EAAE9B,SAAS,CAACwB,IAAV,CAAelB,UATM;AAUnCiB,EAAAA,MAAM,EAAEvB,SAAS,CAACwB,IAAV,CAAelB,UAVY;AAWnCyB,EAAAA,gBAAgB,EAAE/B,SAAS,CAACkB,IAXO;AAYnCc,EAAAA,YAAY,EAAEhC,SAAS,CAACkB,IAZW;AAanCO,EAAAA,eAAe,EAAEzB,SAAS,CAACkB,IAbQ;AAcnCe,EAAAA,YAAY,EAAEjC,SAAS,CAACwB,IAdW;AAenCU,EAAAA,UAAU,EAAElC,SAAS,CAACwB,IAfa;AAgBnCW,EAAAA,cAAc,EAAEnC,SAAS,CAACwB,IAhBS;AAiBnCY,EAAAA,QAAQ,EAAEpC,SAAS,CAACqC,IAAV,CAAe/B;AAjBU,CAA9B","sourcesContent":["/* @flow */\n\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\n\nexport const NavigationRoutePropType = PropTypes.shape({\n  title: PropTypes.string,\n  key: PropTypes.string.isRequired,\n});\n\nexport const NavigationStatePropType = PropTypes.shape({\n  routes: PropTypes.arrayOf(NavigationRoutePropType).isRequired,\n  index: PropTypes.number.isRequired,\n});\n\nexport const SceneRendererPropType = {\n  panX: PropTypes.object.isRequired,\n  offsetX: PropTypes.object.isRequired,\n  layout: PropTypes.shape({\n    measured: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }).isRequired,\n  navigationState: NavigationStatePropType.isRequired,\n  position: PropTypes.object.isRequired,\n  jumpTo: PropTypes.func.isRequired,\n  useNativeDriver: PropTypes.bool,\n};\n\nexport const PagerRendererPropType = {\n  layout: PropTypes.shape({\n    measured: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }).isRequired,\n  navigationState: NavigationStatePropType.isRequired,\n  panX: PropTypes.instanceOf(Animated.Value).isRequired,\n  offsetX: PropTypes.instanceOf(Animated.Value).isRequired,\n  canJumpToTab: PropTypes.func.isRequired,\n  jumpTo: PropTypes.func.isRequired,\n  animationEnabled: PropTypes.bool,\n  swipeEnabled: PropTypes.bool,\n  useNativeDriver: PropTypes.bool,\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onAnimationEnd: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}