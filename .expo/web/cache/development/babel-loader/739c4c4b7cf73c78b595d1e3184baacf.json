{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation/src/views/Header/ModularHeaderBackButton.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableItem from \"../TouchableItem\";\n\nvar defaultBackImage = require(\"../assets/back-icon.png\");\n\nvar ModularHeaderBackButton = function (_React$PureComponent) {\n  _inherits(ModularHeaderBackButton, _React$PureComponent);\n\n  var _super = _createSuper(ModularHeaderBackButton);\n\n  function ModularHeaderBackButton() {\n    var _this;\n\n    _classCallCheck(this, ModularHeaderBackButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this._onTextLayout = function (e) {\n      if (_this.state.initialTextWidth) {\n        return;\n      }\n\n      _this.setState({\n        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModularHeaderBackButton, [{\n    key: \"_renderBackImage\",\n    value: function _renderBackImage() {\n      var _this$props = this.props,\n          backImage = _this$props.backImage,\n          title = _this$props.title,\n          tintColor = _this$props.tintColor;\n      var BackImage;\n      var props;\n\n      if (React.isValidElement(backImage)) {\n        return backImage;\n      } else if (backImage) {\n        BackImage = backImage;\n        props = {\n          tintColor: tintColor,\n          title: title\n        };\n      } else {\n        BackImage = Image;\n        props = {\n          style: [styles.icon, !!title && styles.iconWithTitle, !!tintColor && {\n            tintColor: tintColor\n          }],\n          source: defaultBackImage\n        };\n      }\n\n      return React.createElement(BackImage, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onPress = _this$props2.onPress,\n          width = _this$props2.width,\n          title = _this$props2.title,\n          titleStyle = _this$props2.titleStyle,\n          tintColor = _this$props2.tintColor,\n          truncatedTitle = _this$props2.truncatedTitle;\n      var renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;\n      var backButtonTitle = renderTruncated ? truncatedTitle : title;\n\n      if (backButtonTitle && backButtonTitle.length > 8) {\n        backButtonTitle = truncatedTitle;\n      }\n\n      var _this$props3 = this.props,\n          ButtonContainerComponent = _this$props3.ButtonContainerComponent,\n          LabelContainerComponent = _this$props3.LabelContainerComponent;\n      return React.createElement(TouchableItem, {\n        accessibilityComponentType: \"button\",\n        accessibilityLabel: backButtonTitle,\n        accessibilityTraits: \"button\",\n        testID: \"header-back\",\n        delayPressIn: 0,\n        onPress: onPress,\n        style: styles.container,\n        borderless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, React.createElement(ButtonContainerComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, this._renderBackImage()), typeof backButtonTitle === 'string' && React.createElement(LabelContainerComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        onLayout: this._onTextLayout,\n        style: [styles.title, !!tintColor && {\n          color: tintColor\n        }, titleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, backButtonTitle))));\n    }\n  }]);\n\n  return ModularHeaderBackButton;\n}(React.PureComponent);\n\nModularHeaderBackButton.defaultProps = {\n  tintColor: '#037aff',\n  truncatedTitle: 'Back'\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent'\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10\n  },\n  icon: {\n    height: 21,\n    width: 12,\n    marginLeft: 9,\n    marginRight: 22,\n    marginVertical: 12,\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  iconWithTitle: {\n    marginRight: 3\n  }\n});\nexport default ModularHeaderBackButton;","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation/src/views/Header/ModularHeaderBackButton.js"],"names":["React","TouchableItem","defaultBackImage","require","ModularHeaderBackButton","state","_onTextLayout","e","initialTextWidth","setState","nativeEvent","layout","x","width","props","backImage","title","tintColor","BackImage","isValidElement","Image","style","styles","icon","iconWithTitle","source","onPress","titleStyle","truncatedTitle","renderTruncated","backButtonTitle","length","ButtonContainerComponent","LabelContainerComponent","container","_renderBackImage","color","PureComponent","defaultProps","StyleSheet","create","alignItems","flexDirection","backgroundColor","fontSize","paddingRight","height","marginLeft","marginRight","marginVertical","resizeMode","transform","scaleX","I18nManager","isRTL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { I18nManager, Image, Text, View, StyleSheet } from 'react-native';\n\nimport TouchableItem from '../TouchableItem';\n\nconst defaultBackImage = require('../assets/back-icon.png');\n\nclass ModularHeaderBackButton extends React.PureComponent {\n  static defaultProps = {\n    tintColor: '#037aff',\n    truncatedTitle: 'Back',\n  };\n\n  state = {};\n\n  _onTextLayout = e => {\n    if (this.state.initialTextWidth) {\n      return;\n    }\n    this.setState({\n      initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width,\n    });\n  };\n\n  _renderBackImage() {\n    const { backImage, title, tintColor } = this.props;\n\n    let BackImage;\n    let props;\n\n    if (React.isValidElement(backImage)) {\n      return backImage;\n    } else if (backImage) {\n      BackImage = backImage;\n      props = {\n        tintColor,\n        title,\n      };\n    } else {\n      BackImage = Image;\n      props = {\n        style: [\n          styles.icon,\n          !!title && styles.iconWithTitle,\n          !!tintColor && { tintColor },\n        ],\n        source: defaultBackImage,\n      };\n    }\n\n    return <BackImage {...props} />;\n  }\n\n  render() {\n    const {\n      onPress,\n      width,\n      title,\n      titleStyle,\n      tintColor,\n      truncatedTitle,\n    } = this.props;\n\n    const renderTruncated =\n      this.state.initialTextWidth && width\n        ? this.state.initialTextWidth > width\n        : false;\n\n    let backButtonTitle = renderTruncated ? truncatedTitle : title;\n\n    // TODO: When we've sorted out measuring in the header, let's revisit this.\n    // This is clearly a bad workaround.\n    if (backButtonTitle && backButtonTitle.length > 8) {\n      backButtonTitle = truncatedTitle;\n    }\n\n    const { ButtonContainerComponent, LabelContainerComponent } = this.props;\n\n    return (\n      <TouchableItem\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={backButtonTitle}\n        accessibilityTraits=\"button\"\n        testID=\"header-back\"\n        delayPressIn={0}\n        onPress={onPress}\n        style={styles.container}\n        borderless\n      >\n        <View style={styles.container}>\n          <ButtonContainerComponent>\n            {this._renderBackImage()}\n          </ButtonContainerComponent>\n          {typeof backButtonTitle === 'string' && (\n            <LabelContainerComponent>\n              <Text\n                onLayout={this._onTextLayout}\n                style={[\n                  styles.title,\n                  !!tintColor && { color: tintColor },\n                  titleStyle,\n                ]}\n                numberOfLines={1}\n              >\n                {backButtonTitle}\n              </Text>\n            </LabelContainerComponent>\n          )}\n        </View>\n      </TouchableItem>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10,\n  },\n  icon: {\n    height: 21,\n    width: 12,\n    marginLeft: 9,\n    marginRight: 22,\n    marginVertical: 12,\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  iconWithTitle: {\n    marginRight: 3,\n  },\n});\n\nexport default ModularHeaderBackButton;\n"]},"metadata":{},"sourceType":"module"}