{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Constants from 'expo-constants';\nimport * as Google from 'expo-google-app-auth';\nvar permissions = ['profile', 'email'];\n\nvar loginAsync = function loginAsync() {\n  var result;\n  return _regeneratorRuntime.async(function loginAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Google.logInAsync({\n            iosClientId: Constants.manifest.extra.googleAppId.ios,\n            androidClientId: Constants.manifest.extra.googleAppId.android,\n            permissions: permissions\n          }));\n\n        case 3:\n          result = _context.sent;\n\n          if (!(result.type === 'success')) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Promise.resolve(result.accessToken));\n\n        case 6:\n          return _context.abrupt(\"return\", Promise.reject('No success'));\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\n\nexport var GoogleApi = {\n  loginAsync: loginAsync\n};","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/src/api/Google.js"],"names":["Constants","Google","permissions","loginAsync","logInAsync","iosClientId","manifest","extra","googleAppId","ios","androidClientId","android","result","type","Promise","resolve","accessToken","reject","GoogleApi"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AAEA,IAAMC,WAAW,GAAG,CAAC,SAAD,EAAY,OAAZ,CAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEIF,MAAM,CAACG,UAAP,CAAkB;AACtCC,YAAAA,WAAW,EAAEL,SAAS,CAACM,QAAV,CAAmBC,KAAnB,CAAyBC,WAAzB,CAAqCC,GADZ;AAEtCC,YAAAA,eAAe,EAAEV,SAAS,CAACM,QAAV,CAAmBC,KAAnB,CAAyBC,WAAzB,CAAqCG,OAFhB;AAGtCT,YAAAA,WAAW,EAAXA;AAHsC,WAAlB,CAFJ;;AAAA;AAEXU,UAAAA,MAFW;;AAAA,gBAQbA,MAAM,CAACC,IAAP,KAAgB,SARH;AAAA;AAAA;AAAA;;AAAA,2CASTC,OAAO,CAACC,OAAR,CAAgBH,MAAM,CAACI,WAAvB,CATS;;AAAA;AAAA,2CAWVF,OAAO,CAACG,MAAR,CAAe,YAAf,CAXU;;AAAA;AAAA;AAAA;AAAA,2CAaVH,OAAO,CAACG,MAAR,aAbU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAiBA,OAAO,IAAMC,SAAS,GAAG;AACxBf,EAAAA,UAAU,EAAVA;AADwB,CAAlB","sourcesContent":["import Constants from 'expo-constants'\nimport * as Google from 'expo-google-app-auth'\n\nconst permissions = ['profile', 'email']\n\nconst loginAsync = async () => {\n\ttry {\n\t\tconst result = await Google.logInAsync({\n\t\t\tiosClientId: Constants.manifest.extra.googleAppId.ios,\n\t\t\tandroidClientId: Constants.manifest.extra.googleAppId.android,\n\t\t\tpermissions,\n\t\t})\n\n\t\tif (result.type === 'success') {\n\t\t\treturn Promise.resolve(result.accessToken)\n\t\t}\n\t\treturn Promise.reject('No success')\n\t} catch (error) {\n\t\treturn Promise.reject(error)\n\t}\n}\n\nexport const GoogleApi = {\n\tloginAsync,\n}"]},"metadata":{},"sourceType":"module"}