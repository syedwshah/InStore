{"ast":null,"code":"import get from 'lodash.get';\nexport var boxFlexUtils = function boxFlexUtils(props) {\n  var _style = {};\n\n  if (props.f && typeof props.f === 'number') {\n    _style.flex = props.f;\n  }\n\n  var dir = get(props, 'dir');\n\n  if (dir) {\n    if (dir === 'row') {\n      _style.flexDirection = 'row';\n    } else if (dir === 'row-reverse') {\n      _style.flexDirection = 'row-reverse';\n    } else if (dir === 'col') {\n      _style.flexDirection = 'column';\n    } else if (dir === 'col-reverse') {\n      _style.flexDirection = 'column-reverse';\n    }\n  }\n\n  var align = get(props, 'align');\n\n  if (align) {\n    if (align === 'center') {\n      _style.alignItems = 'center';\n    } else if (align === 'start') {\n      _style.alignItems = 'flex-start';\n    } else if (align === 'end') {\n      _style.alignItems = 'flex-end';\n    } else if (align === 'stretch') {\n      _style.alignItems = 'stretch';\n    } else if (align === 'baseline') {\n      _style.alignItems = 'baseline';\n    }\n  }\n\n  var justify = get(props, 'justify');\n\n  if (justify) {\n    if (justify === 'center') {\n      _style.justifyContent = 'center';\n    } else if (justify === 'start') {\n      _style.justifyContent = 'flex-start';\n    } else if (justify === 'end') {\n      _style.justifyContent = 'flex-end';\n    } else if (justify === 'between') {\n      _style.justifyContent = 'space-between';\n    } else if (justify === 'around') {\n      _style.justifyContent = 'space-around';\n    } else if (justify === 'evenly') {\n      _style.justifyContent = 'space-evenly';\n    }\n  }\n\n  var self = get(props, 'self');\n\n  if (self) {\n    if (self === 'center') {\n      _style.alignSelf = 'center';\n    } else if (self === 'start') {\n      _style.alignSelf = 'flex-start';\n    } else if (self === 'end') {\n      _style.alignSelf = 'flex-end';\n    } else if (self === 'stretch') {\n      _style.alignSelf = 'stretch';\n    } else if (self === 'auto') {\n      _style.alignSelf = 'auto';\n    } else if (self === 'baseline') {\n      _style.alignSelf = 'baseline';\n    }\n  }\n\n  var flexWrap = get(props, 'flexWrap');\n\n  if (flexWrap) {\n    _style.flexWrap = flexWrap;\n  }\n\n  return _style;\n};","map":{"version":3,"sources":["flex.ts"],"names":["boxFlexUtils","_style","props","dir","get","align","justify","self","flexWrap"],"mappings":"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","sourcesContent":["import { FlexAlignType } from 'react-native';\nimport get from 'lodash.get';\n\nimport {\n  JustifyContentType,\n  FlexDirectionType,\n  DirType,\n  AlignType,\n  JustifyType,\n  AlignSelfType,\n  SelfType,\n  FlexWrapType,\n} from '../../types/Flex';\n\ninterface IProps {\n  f?: number;\n  dir?: DirType;\n  align?: AlignType;\n  justify?: JustifyType;\n  self?: SelfType;\n  flexWrap?: FlexWrapType;\n}\n\nexport const boxFlexUtils = (props: IProps) => {\n  const _style: {\n    flexDirection?: FlexDirectionType;\n    alignItems?: FlexAlignType;\n    justifyContent?: JustifyContentType;\n    alignSelf?: AlignSelfType;\n    flex?: number;\n    flexWrap?: FlexWrapType;\n  } = {};\n\n  if (props.f && typeof props.f === 'number') {\n    _style.flex = props.f;\n  }\n\n  const dir = get(props, 'dir');\n\n  if (dir) {\n    if (dir === 'row') {\n      _style.flexDirection = 'row';\n    } else if (dir === 'row-reverse') {\n      _style.flexDirection = 'row-reverse';\n    } else if (dir === 'col') {\n      _style.flexDirection = 'column';\n    } else if (dir === 'col-reverse') {\n      _style.flexDirection = 'column-reverse';\n    }\n  }\n\n  const align = get(props, 'align');\n\n  if (align) {\n    if (align === 'center') {\n      _style.alignItems = 'center';\n    } else if (align === 'start') {\n      _style.alignItems = 'flex-start';\n    } else if (align === 'end') {\n      _style.alignItems = 'flex-end';\n    } else if (align === 'stretch') {\n      _style.alignItems = 'stretch';\n    } else if (align === 'baseline') {\n      _style.alignItems = 'baseline';\n    }\n  }\n\n  const justify = get(props, 'justify');\n\n  if (justify) {\n    if (justify === 'center') {\n      _style.justifyContent = 'center';\n    } else if (justify === 'start') {\n      _style.justifyContent = 'flex-start';\n    } else if (justify === 'end') {\n      _style.justifyContent = 'flex-end';\n    } else if (justify === 'between') {\n      _style.justifyContent = 'space-between';\n    } else if (justify === 'around') {\n      _style.justifyContent = 'space-around';\n    } else if (justify === 'evenly') {\n      _style.justifyContent = 'space-evenly';\n    }\n  }\n\n  const self = get(props, 'self');\n\n  if (self) {\n    if (self === 'center') {\n      _style.alignSelf = 'center';\n    } else if (self === 'start') {\n      _style.alignSelf = 'flex-start';\n    } else if (self === 'end') {\n      _style.alignSelf = 'flex-end';\n    } else if (self === 'stretch') {\n      _style.alignSelf = 'stretch';\n    } else if (self === 'auto') {\n      _style.alignSelf = 'auto';\n    } else if (self === 'baseline') {\n      _style.alignSelf = 'baseline';\n    }\n  }\n\n  const flexWrap = get(props, 'flexWrap');\n\n  if (flexWrap) {\n    _style.flexWrap = flexWrap;\n  }\n\n  return _style;\n};\n"]},"metadata":{},"sourceType":"module"}