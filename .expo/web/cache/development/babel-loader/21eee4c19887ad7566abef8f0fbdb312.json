{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarIcon.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar TabBarIcon = function (_React$PureComponent) {\n  _inherits(TabBarIcon, _React$PureComponent);\n\n  var _super = _createSuper(TabBarIcon);\n\n  function TabBarIcon() {\n    _classCallCheck(this, TabBarIcon);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabBarIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          position = _this$props.position,\n          scene = _this$props.scene,\n          navigation = _this$props.navigation,\n          activeTintColor = _this$props.activeTintColor,\n          inactiveTintColor = _this$props.inactiveTintColor,\n          style = _this$props.style;\n      var route = scene.route,\n          index = scene.index;\n      var routes = navigation.state.routes;\n      var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n        return i;\n      })));\n      var activeOpacity = position.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (i) {\n          return i === index ? 1 : 0;\n        })\n      });\n      var inactiveOpacity = position.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (i) {\n          return i === index ? 0 : 1;\n        })\n      });\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.icon, {\n          opacity: activeOpacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, this.props.renderIcon({\n        route: route,\n        index: index,\n        focused: true,\n        tintColor: activeTintColor\n      })), React.createElement(Animated.View, {\n        style: [styles.icon, {\n          opacity: inactiveOpacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, this.props.renderIcon({\n        route: route,\n        index: index,\n        focused: false,\n        tintColor: inactiveTintColor\n      })));\n    }\n  }]);\n\n  return TabBarIcon;\n}(React.PureComponent);\n\nexport { TabBarIcon as default };\nvar styles = StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 30\n  }\n});","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarIcon.js"],"names":["React","TabBarIcon","props","position","scene","navigation","activeTintColor","inactiveTintColor","style","route","index","routes","state","inputRange","map","x","i","activeOpacity","interpolate","outputRange","inactiveOpacity","styles","icon","opacity","renderIcon","focused","tintColor","PureComponent","StyleSheet","create","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;IAGqBC,U;;;;;;;;;;;;;6BACV;AAAA,wBAQH,KAAKC,KARF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILC,UAJK,eAILA,UAJK;AAAA,UAKLC,eALK,eAKLA,eALK;AAAA,UAMLC,iBANK,eAMLA,iBANK;AAAA,UAOLC,KAPK,eAOLA,KAPK;AAAA,UASCC,KATD,GASkBL,KATlB,CASCK,KATD;AAAA,UASQC,KATR,GASkBN,KATlB,CASQM,KATR;AAAA,UAUCC,MAVD,GAUYN,UAAU,CAACO,KAVvB,CAUCD,MAVD;AAYP,UAAME,UAAU,IAAI,CAAC,CAAL,4BAAWF,MAAM,CAACG,GAAP,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAV;AAAA,OAAX,CAAX,EAAhB;AACA,UAAMC,aAAa,GAAGd,QAAQ,CAACe,WAAT,CAAqB;AACzCL,QAAAA,UAAU,EAAVA,UADyC;AAEzCM,QAAAA,WAAW,EAAEN,UAAU,CAACC,GAAX,CAAe,UAAAE,CAAC;AAAA,iBAAKA,CAAC,KAAKN,KAAN,GAAc,CAAd,GAAkB,CAAvB;AAAA,SAAhB;AAF4B,OAArB,CAAtB;AAIA,UAAMU,eAAe,GAAGjB,QAAQ,CAACe,WAAT,CAAqB;AAC3CL,QAAAA,UAAU,EAAVA,UAD2C;AAE3CM,QAAAA,WAAW,EAAEN,UAAU,CAACC,GAAX,CAAe,UAAAE,CAAC;AAAA,iBAAKA,CAAC,KAAKN,KAAN,GAAc,CAAd,GAAkB,CAAvB;AAAA,SAAhB;AAF8B,OAArB,CAAxB;AAOA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACa,MAAM,CAACC,IAAR,EAAc;AAAEC,UAAAA,OAAO,EAAEN;AAAX,SAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKf,KAAL,CAAWsB,UAAX,CAAsB;AACrBf,QAAAA,KAAK,EAALA,KADqB;AAErBC,QAAAA,KAAK,EAALA,KAFqB;AAGrBe,QAAAA,OAAO,EAAE,IAHY;AAIrBC,QAAAA,SAAS,EAAEpB;AAJU,OAAtB,CADH,CADF,EASE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACe,MAAM,CAACC,IAAR,EAAc;AAAEC,UAAAA,OAAO,EAAEH;AAAX,SAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKlB,KAAL,CAAWsB,UAAX,CAAsB;AACrBf,QAAAA,KAAK,EAALA,KADqB;AAErBC,QAAAA,KAAK,EAALA,KAFqB;AAGrBe,QAAAA,OAAO,EAAE,KAHY;AAIrBC,QAAAA,SAAS,EAAEnB;AAJU,OAAtB,CADH,CATF,CADF;AAoBD;;;;EA7CqCP,KAAK,CAAC2B,a;;SAAzB1B,U;AAgDrB,IAAMoB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,IAAI,EAAE;AAIJnB,IAAAA,QAAQ,EAAE,UAJN;AAKJ2B,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,MAAM,EAAE,MARJ;AASJC,IAAAA,KAAK,EAAE,MATH;AAUJC,IAAAA,QAAQ,EAAE;AAVN;AADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\n\nexport default class TabBarIcon extends React.PureComponent {\n  render() {\n    const {\n      position,\n      scene,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      style,\n    } = this.props;\n    const { route, index } = scene;\n    const { routes } = navigation.state;\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const activeOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => (i === index ? 1 : 0)),\n    });\n    const inactiveOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => (i === index ? 0 : 1)),\n    });\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {this.props.renderIcon({\n            route,\n            index,\n            focused: true,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {this.props.renderIcon({\n            route,\n            index,\n            focused: false,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 30,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}