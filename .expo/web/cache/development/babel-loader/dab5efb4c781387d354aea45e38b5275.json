{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation-tabs/node_modules/react-native-tab-view/src/TabBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableItem from \"./TouchableItem\";\nimport { SceneRendererPropType } from \"./PropTypes\";\nvar useNativeDriver = Boolean(NativeModules.NativeAnimatedModule);\n\nvar TabBar = function (_React$Component) {\n  _inherits(TabBar, _React$Component);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar(_props) {\n    var _this;\n\n    _classCallCheck(this, TabBar);\n\n    _this = _super.call(this, _props);\n    _this._isIntial = true;\n    _this._isManualScroll = false;\n    _this._isMomentumScroll = false;\n\n    _this._startTrackingPosition = function () {\n      _this._offsetXListener = _this.props.offsetX.addListener(function (_ref) {\n        var value = _ref.value;\n        _this._lastOffsetX = value;\n\n        _this._handlePosition();\n      });\n      _this._panXListener = _this.props.panX.addListener(function (_ref2) {\n        var value = _ref2.value;\n        _this._lastPanX = value;\n\n        _this._handlePosition();\n      });\n    };\n\n    _this._stopTrackingPosition = function () {\n      _this.props.offsetX.removeListener(_this._offsetXListener);\n\n      _this.props.panX.removeListener(_this._panXListener);\n    };\n\n    _this._handlePosition = function () {\n      var _this$props = _this.props,\n          navigationState = _this$props.navigationState,\n          layout = _this$props.layout;\n\n      if (layout.width === 0) {\n        return;\n      }\n\n      var panX = typeof _this._lastPanX === 'number' ? _this._lastPanX : 0;\n      var offsetX = typeof _this._lastOffsetX === 'number' ? _this._lastOffsetX : -navigationState.index * layout.width;\n      var value = (panX + offsetX) / -(layout.width || 0.001);\n\n      _this._adjustScroll(value);\n    };\n\n    _this._renderLabel = function (scene) {\n      if (typeof _this.props.renderLabel !== 'undefined') {\n        return _this.props.renderLabel(scene);\n      }\n\n      var label = _this.props.getLabelText(scene);\n\n      if (typeof label !== 'string') {\n        return null;\n      }\n\n      return React.createElement(Animated.Text, {\n        style: [styles.tabLabel, _this.props.labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }\n      }, label);\n    };\n\n    _this._renderIndicator = function (props) {\n      if (typeof _this.props.renderIndicator !== 'undefined') {\n        return _this.props.renderIndicator(props);\n      }\n\n      var width = props.width,\n          position = props.position,\n          navigationState = props.navigationState;\n      var translateX = Animated.multiply(Animated.multiply(position.interpolate({\n        inputRange: [-1, navigationState.routes.length],\n        outputRange: [-1, navigationState.routes.length],\n        extrapolate: 'clamp'\n      }), width), I18nManager.isRTL ? -1 : 1);\n      return React.createElement(Animated.View, {\n        style: [styles.indicator, {\n          width: width,\n          transform: [{\n            translateX: translateX\n          }]\n        }, _this.props.indicatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this._getTabWidth = function (props) {\n      var layout = props.layout,\n          navigationState = props.navigationState,\n          tabStyle = props.tabStyle;\n      var flattened = StyleSheet.flatten(tabStyle);\n\n      if (flattened) {\n        switch (typeof flattened.width) {\n          case 'number':\n            return flattened.width;\n\n          case 'string':\n            if (flattened.width.endsWith('%')) {\n              var width = parseFloat(flattened.width);\n\n              if (Number.isFinite(width)) {\n                return layout.width * (width / 100);\n              }\n            }\n\n        }\n      }\n\n      if (props.scrollEnabled) {\n        return layout.width / 5 * 2;\n      }\n\n      return layout.width / navigationState.routes.length;\n    };\n\n    _this._handleTabPress = function (_ref3) {\n      var route = _ref3.route;\n      _this._pendingIndex = _this.props.navigationState.routes.indexOf(route);\n\n      if (_this.props.onTabPress) {\n        _this.props.onTabPress({\n          route: route\n        });\n      }\n\n      _this.props.jumpTo(route.key);\n    };\n\n    _this._handleTabLongPress = function (_ref4) {\n      var route = _ref4.route;\n\n      if (_this.props.onTabLongPress) {\n        _this.props.onTabLongPress({\n          route: route\n        });\n      }\n    };\n\n    _this._normalizeScrollValue = function (props, value) {\n      var layout = props.layout,\n          navigationState = props.navigationState;\n\n      var tabWidth = _this._getTabWidth(props);\n\n      var tabBarWidth = Math.max(tabWidth * navigationState.routes.length, layout.width);\n      var maxDistance = tabBarWidth - layout.width;\n      return Math.max(Math.min(value, maxDistance), 0);\n    };\n\n    _this._getScrollAmount = function (props, i) {\n      var layout = props.layout;\n\n      var tabWidth = _this._getTabWidth(props);\n\n      var centerDistance = tabWidth * (i + 1 / 2);\n      var scrollAmount = centerDistance - layout.width / 2;\n      return _this._normalizeScrollValue(props, scrollAmount);\n    };\n\n    _this._adjustScroll = function (value) {\n      if (_this.props.scrollEnabled) {\n        global.cancelAnimationFrame(_this._scrollResetCallback);\n        _this._scrollView && _this._scrollView.scrollTo({\n          x: _this._normalizeScrollValue(_this.props, _this._getScrollAmount(_this.props, value)),\n          animated: !_this._isIntial\n        });\n        _this._isIntial = false;\n      }\n    };\n\n    _this._resetScroll = function (value) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (_this.props.scrollEnabled) {\n        global.cancelAnimationFrame(_this._scrollResetCallback);\n        _this._scrollResetCallback = global.requestAnimationFrame(function () {\n          _this._scrollView && _this._scrollView.scrollTo({\n            x: _this._getScrollAmount(_this.props, value),\n            animated: animated\n          });\n        });\n      }\n    };\n\n    _this._handleBeginDrag = function () {\n      _this._isManualScroll = true;\n      _this._isMomentumScroll = false;\n    };\n\n    _this._handleEndDrag = function () {\n      global.requestAnimationFrame(function () {\n        if (_this._isMomentumScroll) {\n          return;\n        }\n\n        _this._isManualScroll = false;\n      });\n    };\n\n    _this._handleMomentumScrollBegin = function () {\n      _this._isMomentumScroll = true;\n    };\n\n    _this._handleMomentumScrollEnd = function () {\n      _this._isMomentumScroll = false;\n      _this._isManualScroll = false;\n    };\n\n    var initialVisibility = 1;\n\n    if (_this.props.scrollEnabled) {\n      var tabWidth = _this._getTabWidth(_this.props);\n\n      if (!tabWidth) {\n        initialVisibility = 0;\n      }\n    }\n\n    var initialOffset = _this.props.scrollEnabled && _this.props.layout.width ? {\n      x: _this._getScrollAmount(_this.props, _this.props.navigationState.index),\n      y: 0\n    } : undefined;\n    _this.state = {\n      visibility: new Animated.Value(initialVisibility),\n      scrollAmount: new Animated.Value(0),\n      initialOffset: initialOffset\n    };\n    return _this;\n  }\n\n  _createClass(TabBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.scrollEnabled && this._startTrackingPosition();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevTabWidth = this._getTabWidth(prevProps);\n\n      var currentTabWidth = this._getTabWidth(this.props);\n\n      var pendingIndex = typeof this._pendingIndex === 'number' ? this._pendingIndex : this.props.navigationState.index;\n      this._pendingIndex = null;\n\n      if (prevTabWidth !== currentTabWidth && currentTabWidth) {\n        this.state.visibility.setValue(1);\n      }\n\n      if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n        this._resetScroll(this.props.navigationState.index, false);\n      } else if (prevProps.navigationState.index !== pendingIndex) {\n        this._resetScroll(this.props.navigationState.index);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._stopTrackingPosition();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          position = _this$props2.position,\n          navigationState = _this$props2.navigationState,\n          scrollEnabled = _this$props2.scrollEnabled,\n          bounces = _this$props2.bounces;\n      var routes = navigationState.routes;\n\n      var tabWidth = this._getTabWidth(this.props);\n\n      var tabBarWidth = tabWidth * routes.length;\n      var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n        return i;\n      })));\n      var translateX = Animated.multiply(this.state.scrollAmount, -1);\n      return React.createElement(Animated.View, {\n        style: [styles.tabBar, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.indicatorContainer, scrollEnabled ? {\n          width: tabBarWidth,\n          transform: [{\n            translateX: translateX\n          }]\n        } : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 9\n        }\n      }, this._renderIndicator(_objectSpread({}, this.props, {\n        width: tabWidth\n      }))), React.createElement(View, {\n        style: styles.scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.ScrollView, {\n        horizontal: true,\n        keyboardShouldPersistTaps: \"handled\",\n        scrollEnabled: scrollEnabled,\n        bounces: bounces,\n        alwaysBounceHorizontal: false,\n        scrollsToTop: false,\n        showsHorizontalScrollIndicator: false,\n        automaticallyAdjustContentInsets: false,\n        overScrollMode: \"never\",\n        contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],\n        scrollEventThrottle: 1,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: this.state.scrollAmount\n            }\n          }\n        }], {\n          useNativeDriver: useNativeDriver\n        }),\n        onScrollBeginDrag: this._handleBeginDrag,\n        onScrollEndDrag: this._handleEndDrag,\n        onMomentumScrollBegin: this._handleMomentumScrollBegin,\n        onMomentumScrollEnd: this._handleMomentumScrollEnd,\n        contentOffset: this.state.initialOffset,\n        ref: function ref(el) {\n          return _this2._scrollView = el && el.getNode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }\n      }, routes.map(function (route, i) {\n        var outputRange = inputRange.map(function (inputIndex) {\n          return inputIndex === i ? 1 : 0.7;\n        });\n        var opacity = Animated.multiply(_this2.state.visibility, position.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        }));\n\n        var label = _this2._renderLabel({\n          route: route\n        });\n\n        var icon = _this2.props.renderIcon ? _this2.props.renderIcon({\n          route: route\n        }) : null;\n        var badge = _this2.props.renderBadge ? _this2.props.renderBadge({\n          route: route\n        }) : null;\n        var tabStyle = {};\n        tabStyle.opacity = opacity;\n\n        if (icon) {\n          if (label) {\n            tabStyle.paddingTop = 8;\n          } else {\n            tabStyle.padding = 12;\n          }\n        }\n\n        var passedTabStyle = StyleSheet.flatten(_this2.props.tabStyle);\n        var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;\n        var tabContainerStyle = {};\n\n        if (isWidthSet) {\n          tabStyle.width = tabWidth;\n        }\n\n        if (passedTabStyle && typeof passedTabStyle.flex === 'number') {\n          tabContainerStyle.flex = passedTabStyle.flex;\n        } else if (!isWidthSet) {\n          tabContainerStyle.flex = 1;\n        }\n\n        var accessibilityLabel = _this2.props.getAccessibilityLabel({\n          route: route\n        });\n\n        accessibilityLabel = typeof accessibilityLabel !== 'undefined' ? accessibilityLabel : _this2.props.getLabelText({\n          route: route\n        });\n        var isFocused = i === navigationState.index;\n        return React.createElement(TouchableItem, {\n          borderless: true,\n          key: route.key,\n          testID: _this2.props.getTestID({\n            route: route\n          }),\n          accessible: _this2.props.getAccessible({\n            route: route\n          }),\n          accessibilityLabel: accessibilityLabel,\n          accessibilityTraits: isFocused ? ['button', 'selected'] : 'button',\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          accessibilityStates: isFocused ? ['selected'] : [],\n          pressColor: _this2.props.pressColor,\n          pressOpacity: _this2.props.pressOpacity,\n          delayPressIn: 0,\n          onPress: function onPress() {\n            return _this2._handleTabPress({\n              route: route\n            });\n          },\n          onLongPress: function onLongPress() {\n            return _this2._handleTabLongPress({\n              route: route\n            });\n          },\n          style: tabContainerStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          pointerEvents: \"none\",\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 19\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.tabItem, tabStyle, passedTabStyle, styles.container],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 21\n          }\n        }, icon, label), badge ? React.createElement(Animated.View, {\n          style: [styles.badge, {\n            opacity: _this2.state.visibility\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 23\n          }\n        }, badge) : null));\n      }))));\n    }\n  }]);\n\n  return TabBar;\n}(React.Component);\n\nTabBar.propTypes = _objectSpread({}, SceneRendererPropType, {\n  scrollEnabled: PropTypes.bool,\n  bounces: PropTypes.bool,\n  pressColor: TouchableItem.propTypes.pressColor,\n  pressOpacity: TouchableItem.propTypes.pressOpacity,\n  getLabelText: PropTypes.func,\n  getAccessible: PropTypes.func,\n  getAccessibilityLabel: PropTypes.func,\n  getTestID: PropTypes.func,\n  renderIcon: PropTypes.func,\n  renderLabel: PropTypes.func,\n  renderIndicator: PropTypes.func,\n  onTabPress: PropTypes.func,\n  onTabLongPress: PropTypes.func,\n  labelStyle: PropTypes.any,\n  style: PropTypes.any\n});\nTabBar.defaultProps = {\n  getLabelText: function getLabelText(_ref5) {\n    var route = _ref5.route;\n    return typeof route.title === 'string' ? route.title.toUpperCase() : route.title;\n  },\n  getAccessible: function getAccessible(_ref6) {\n    var route = _ref6.route;\n    return typeof route.accessible !== 'undefined' ? route.accessible : true;\n  },\n  getAccessibilityLabel: function getAccessibilityLabel(_ref7) {\n    var route = _ref7.route;\n    return route.accessibilityLabel;\n  },\n  getTestID: function getTestID(_ref8) {\n    var route = _ref8.route;\n    return route.testID;\n  }\n};\nexport { TabBar as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scroll: {\n    overflow: Platform.OS === 'web' ? 'auto' : 'scroll'\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth\n    },\n    zIndex: Platform.OS === 'android' ? 0 : 1\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap'\n  },\n  tabLabel: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    margin: 8\n  },\n  tabItem: {\n    flex: 1,\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2\n  }\n});","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation-tabs/node_modules/react-native-tab-view/src/TabBar.js"],"names":["React","PropTypes","TouchableItem","SceneRendererPropType","useNativeDriver","Boolean","NativeModules","NativeAnimatedModule","TabBar","props","_isIntial","_isManualScroll","_isMomentumScroll","_startTrackingPosition","_offsetXListener","offsetX","addListener","value","_lastOffsetX","_handlePosition","_panXListener","panX","_lastPanX","_stopTrackingPosition","removeListener","navigationState","layout","width","index","_adjustScroll","_renderLabel","scene","renderLabel","label","getLabelText","styles","tabLabel","labelStyle","_renderIndicator","renderIndicator","position","translateX","Animated","multiply","interpolate","inputRange","routes","length","outputRange","extrapolate","I18nManager","isRTL","indicator","transform","indicatorStyle","_getTabWidth","tabStyle","flattened","StyleSheet","flatten","endsWith","parseFloat","Number","isFinite","scrollEnabled","_handleTabPress","route","_pendingIndex","indexOf","onTabPress","jumpTo","key","_handleTabLongPress","onTabLongPress","_normalizeScrollValue","tabWidth","tabBarWidth","Math","max","maxDistance","min","_getScrollAmount","i","centerDistance","scrollAmount","global","cancelAnimationFrame","_scrollResetCallback","_scrollView","scrollTo","x","animated","_resetScroll","requestAnimationFrame","_handleBeginDrag","_handleEndDrag","_handleMomentumScrollBegin","_handleMomentumScrollEnd","initialVisibility","initialOffset","y","undefined","state","visibility","Value","prevProps","prevTabWidth","currentTabWidth","pendingIndex","setValue","bounces","map","tabBar","style","indicatorContainer","scroll","tabContent","container","event","nativeEvent","contentOffset","el","getNode","inputIndex","opacity","icon","renderIcon","badge","renderBadge","paddingTop","padding","passedTabStyle","isWidthSet","tabContainerStyle","flex","accessibilityLabel","getAccessibilityLabel","isFocused","getTestID","getAccessible","pressColor","pressOpacity","tabItem","Component","propTypes","bool","func","any","defaultProps","title","toUpperCase","accessible","testID","create","overflow","Platform","OS","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","height","zIndex","flexDirection","flexWrap","color","margin","alignItems","justifyContent","top","right","left","bottom"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  NativeModules,\n  StyleSheet,\n  View,\n  ScrollView,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport TouchableItem from './TouchableItem';\nimport { SceneRendererPropType } from './PropTypes';\nimport type { Scene, SceneRendererProps } from './TypeDefinitions';\nimport type {\n  ViewStyleProp,\n  TextStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype IndicatorProps<T> = SceneRendererProps<T> & {\n  width: number,\n};\n\ntype Props<T> = SceneRendererProps<T> & {\n  scrollEnabled?: boolean,\n  bounces?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  getLabelText: (scene: Scene<T>) => ?string,\n  getAccessible: (scene: Scene<T>) => ?boolean,\n  getAccessibilityLabel: (scene: Scene<T>) => ?string,\n  getTestID: (scene: Scene<T>) => ?string,\n  renderLabel?: (scene: Scene<T>) => React.Node,\n  renderIcon?: (scene: Scene<T>) => React.Node,\n  renderBadge?: (scene: Scene<T>) => React.Node,\n  renderIndicator?: (props: IndicatorProps<T>) => React.Node,\n  onTabPress?: (scene: Scene<T>) => mixed,\n  onTabLongPress?: (scene: Scene<T>) => mixed,\n  tabStyle?: ViewStyleProp,\n  indicatorStyle?: ViewStyleProp,\n  labelStyle?: TextStyleProp,\n  style?: ViewStyleProp,\n};\n\ntype State = {|\n  visibility: Animated.Value,\n  scrollAmount: Animated.Value,\n  initialOffset: ?{| x: number, y: number |},\n|};\n\nconst useNativeDriver = Boolean(NativeModules.NativeAnimatedModule);\n\nexport default class TabBar<T: *> extends React.Component<Props<T>, State> {\n  static propTypes = {\n    ...SceneRendererPropType,\n    scrollEnabled: PropTypes.bool,\n    bounces: PropTypes.bool,\n    pressColor: TouchableItem.propTypes.pressColor,\n    pressOpacity: TouchableItem.propTypes.pressOpacity,\n    getLabelText: PropTypes.func,\n    getAccessible: PropTypes.func,\n    getAccessibilityLabel: PropTypes.func,\n    getTestID: PropTypes.func,\n    renderIcon: PropTypes.func,\n    renderLabel: PropTypes.func,\n    renderIndicator: PropTypes.func,\n    onTabPress: PropTypes.func,\n    onTabLongPress: PropTypes.func,\n    labelStyle: PropTypes.any,\n    style: PropTypes.any,\n  };\n\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<T>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<T>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<T>) => route.accessibilityLabel,\n    getTestID: ({ route }: Scene<T>) => route.testID,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    let initialVisibility = 1;\n\n    if (this.props.scrollEnabled) {\n      const tabWidth = this._getTabWidth(this.props);\n      if (!tabWidth) {\n        initialVisibility = 0;\n      }\n    }\n\n    const initialOffset =\n      this.props.scrollEnabled && this.props.layout.width\n        ? {\n            x: this._getScrollAmount(\n              this.props,\n              this.props.navigationState.index\n            ),\n            y: 0,\n          }\n        : undefined;\n\n    this.state = {\n      visibility: new Animated.Value(initialVisibility),\n      scrollAmount: new Animated.Value(0),\n      initialOffset,\n    };\n  }\n\n  componentDidMount() {\n    this.props.scrollEnabled && this._startTrackingPosition();\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const prevTabWidth = this._getTabWidth(prevProps);\n    const currentTabWidth = this._getTabWidth(this.props);\n    const pendingIndex =\n      typeof this._pendingIndex === 'number'\n        ? this._pendingIndex\n        : this.props.navigationState.index;\n\n    this._pendingIndex = null;\n\n    if (prevTabWidth !== currentTabWidth && currentTabWidth) {\n      this.state.visibility.setValue(1);\n    }\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._resetScroll(this.props.navigationState.index, false);\n    } else if (prevProps.navigationState.index !== pendingIndex) {\n      this._resetScroll(this.props.navigationState.index);\n    }\n  }\n\n  componentWillUnmount() {\n    this._stopTrackingPosition();\n  }\n\n  _scrollView: ?ScrollView;\n  _isIntial: boolean = true;\n  _isManualScroll: boolean = false;\n  _isMomentumScroll: boolean = false;\n  _pendingIndex: ?number;\n  _scrollResetCallback: any;\n  _lastPanX: ?number;\n  _lastOffsetX: ?number;\n  _panXListener: string;\n  _offsetXListener: string;\n\n  _startTrackingPosition = () => {\n    this._offsetXListener = this.props.offsetX.addListener(({ value }) => {\n      this._lastOffsetX = value;\n      this._handlePosition();\n    });\n    this._panXListener = this.props.panX.addListener(({ value }) => {\n      this._lastPanX = value;\n      this._handlePosition();\n    });\n  };\n\n  _stopTrackingPosition = () => {\n    this.props.offsetX.removeListener(this._offsetXListener);\n    this.props.panX.removeListener(this._panXListener);\n  };\n\n  _handlePosition = () => {\n    const { navigationState, layout } = this.props;\n\n    if (layout.width === 0) {\n      // Don't do anything if we don't have layout yet\n      return;\n    }\n\n    const panX = typeof this._lastPanX === 'number' ? this._lastPanX : 0;\n    const offsetX =\n      typeof this._lastOffsetX === 'number'\n        ? this._lastOffsetX\n        : -navigationState.index * layout.width;\n\n    const value = (panX + offsetX) / -(layout.width || 0.001);\n\n    this._adjustScroll(value);\n  };\n\n  _renderLabel = (scene: Scene<*>) => {\n    if (typeof this.props.renderLabel !== 'undefined') {\n      return this.props.renderLabel(scene);\n    }\n    const label = this.props.getLabelText(scene);\n    if (typeof label !== 'string') {\n      return null;\n    }\n    return (\n      <Animated.Text style={[styles.tabLabel, this.props.labelStyle]}>\n        {label}\n      </Animated.Text>\n    );\n  };\n\n  _renderIndicator = (props: IndicatorProps<T>) => {\n    if (typeof this.props.renderIndicator !== 'undefined') {\n      return this.props.renderIndicator(props);\n    }\n    const { width, position, navigationState } = props;\n    const translateX = Animated.multiply(\n      Animated.multiply(\n        position.interpolate({\n          inputRange: [-1, navigationState.routes.length],\n          outputRange: [-1, navigationState.routes.length],\n          extrapolate: 'clamp',\n        }),\n        width\n      ),\n      I18nManager.isRTL ? -1 : 1\n    );\n    return (\n      <Animated.View\n        style={[\n          styles.indicator,\n          { width, transform: [{ translateX }] },\n          this.props.indicatorStyle,\n        ]}\n      />\n    );\n  };\n\n  _getTabWidth = props => {\n    const { layout, navigationState, tabStyle } = props;\n    const flattened = StyleSheet.flatten(tabStyle);\n\n    if (flattened) {\n      switch (typeof flattened.width) {\n        case 'number':\n          return flattened.width;\n        case 'string':\n          if (flattened.width.endsWith('%')) {\n            const width = parseFloat(flattened.width);\n            if (Number.isFinite(width)) {\n              return layout.width * (width / 100);\n            }\n          }\n      }\n    }\n\n    if (props.scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / navigationState.routes.length;\n  };\n\n  _handleTabPress = ({ route }: Scene<*>) => {\n    this._pendingIndex = this.props.navigationState.routes.indexOf(route);\n\n    if (this.props.onTabPress) {\n      this.props.onTabPress({ route });\n    }\n\n    this.props.jumpTo(route.key);\n  };\n\n  _handleTabLongPress = ({ route }: Scene<*>) => {\n    if (this.props.onTabLongPress) {\n      this.props.onTabLongPress({ route });\n    }\n  };\n\n  _normalizeScrollValue = (props, value) => {\n    const { layout, navigationState } = props;\n    const tabWidth = this._getTabWidth(props);\n    const tabBarWidth = Math.max(\n      tabWidth * navigationState.routes.length,\n      layout.width\n    );\n    const maxDistance = tabBarWidth - layout.width;\n\n    return Math.max(Math.min(value, maxDistance), 0);\n  };\n\n  _getScrollAmount = (props, i) => {\n    const { layout } = props;\n    const tabWidth = this._getTabWidth(props);\n    const centerDistance = tabWidth * (i + 1 / 2);\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this._normalizeScrollValue(props, scrollAmount);\n  };\n\n  _adjustScroll = (value: number) => {\n    if (this.props.scrollEnabled) {\n      global.cancelAnimationFrame(this._scrollResetCallback);\n      this._scrollView &&\n        this._scrollView.scrollTo({\n          x: this._normalizeScrollValue(\n            this.props,\n            this._getScrollAmount(this.props, value)\n          ),\n          animated: !this._isIntial, // Disable animation for the initial render\n        });\n\n      this._isIntial = false;\n    }\n  };\n\n  _resetScroll = (value: number, animated = true) => {\n    if (this.props.scrollEnabled) {\n      global.cancelAnimationFrame(this._scrollResetCallback);\n      this._scrollResetCallback = global.requestAnimationFrame(() => {\n        this._scrollView &&\n          this._scrollView.scrollTo({\n            x: this._getScrollAmount(this.props, value),\n            animated,\n          });\n      });\n    }\n  };\n\n  _handleBeginDrag = () => {\n    // onScrollBeginDrag fires when user touches the ScrollView\n    this._isManualScroll = true;\n    this._isMomentumScroll = false;\n  };\n\n  _handleEndDrag = () => {\n    // onScrollEndDrag fires when user lifts his finger\n    // onMomentumScrollBegin fires after touch end\n    // run the logic in next frame so we get onMomentumScrollBegin first\n    global.requestAnimationFrame(() => {\n      if (this._isMomentumScroll) {\n        return;\n      }\n      this._isManualScroll = false;\n    });\n  };\n\n  _handleMomentumScrollBegin = () => {\n    // onMomentumScrollBegin fires on flick, as well as programmatic scroll\n    this._isMomentumScroll = true;\n  };\n\n  _handleMomentumScrollEnd = () => {\n    // onMomentumScrollEnd fires when the scroll finishes\n    this._isMomentumScroll = false;\n    this._isManualScroll = false;\n  };\n\n  render() {\n    const { position, navigationState, scrollEnabled, bounces } = this.props;\n    const { routes } = navigationState;\n    const tabWidth = this._getTabWidth(this.props);\n    const tabBarWidth = tabWidth * routes.length;\n\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const translateX = Animated.multiply(this.state.scrollAmount, -1);\n\n    return (\n      <Animated.View style={[styles.tabBar, this.props.style]}>\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled\n              ? { width: tabBarWidth, transform: [{ translateX }] }\n              : null,\n          ]}\n        >\n          {this._renderIndicator({\n            ...this.props,\n            width: tabWidth,\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled ? null : styles.container,\n            ]}\n            scrollEventThrottle={1}\n            onScroll={Animated.event(\n              [\n                {\n                  nativeEvent: {\n                    contentOffset: { x: this.state.scrollAmount },\n                  },\n                },\n              ],\n              { useNativeDriver }\n            )}\n            onScrollBeginDrag={this._handleBeginDrag}\n            onScrollEndDrag={this._handleEndDrag}\n            onMomentumScrollBegin={this._handleMomentumScrollBegin}\n            onMomentumScrollEnd={this._handleMomentumScrollEnd}\n            contentOffset={this.state.initialOffset}\n            ref={el => (this._scrollView = el && el.getNode())}\n          >\n            {routes.map((route, i) => {\n              const outputRange = inputRange.map(\n                inputIndex => (inputIndex === i ? 1 : 0.7)\n              );\n              const opacity = Animated.multiply(\n                this.state.visibility,\n                position.interpolate({\n                  inputRange,\n                  outputRange,\n                })\n              );\n              const label = this._renderLabel({ route });\n              const icon = this.props.renderIcon\n                ? this.props.renderIcon({ route })\n                : null;\n              const badge = this.props.renderBadge\n                ? this.props.renderBadge({ route })\n                : null;\n\n              const tabStyle = {};\n\n              tabStyle.opacity = opacity;\n\n              if (icon) {\n                if (label) {\n                  tabStyle.paddingTop = 8;\n                } else {\n                  tabStyle.padding = 12;\n                }\n              }\n\n              const passedTabStyle = StyleSheet.flatten(this.props.tabStyle);\n              const isWidthSet =\n                (passedTabStyle &&\n                  typeof passedTabStyle.width !== 'undefined') ||\n                scrollEnabled === true;\n              const tabContainerStyle = {};\n\n              if (isWidthSet) {\n                tabStyle.width = tabWidth;\n              }\n\n              if (passedTabStyle && typeof passedTabStyle.flex === 'number') {\n                tabContainerStyle.flex = passedTabStyle.flex;\n              } else if (!isWidthSet) {\n                tabContainerStyle.flex = 1;\n              }\n\n              let accessibilityLabel = this.props.getAccessibilityLabel({\n                route,\n              });\n\n              accessibilityLabel =\n                typeof accessibilityLabel !== 'undefined'\n                  ? accessibilityLabel\n                  : this.props.getLabelText({ route });\n\n              const isFocused = i === navigationState.index;\n\n              return (\n                <TouchableItem\n                  borderless\n                  key={route.key}\n                  testID={this.props.getTestID({ route })}\n                  accessible={this.props.getAccessible({ route })}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityTraits={\n                    isFocused ? ['button', 'selected'] : 'button'\n                  }\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                  accessibilityStates={isFocused ? ['selected'] : []}\n                  pressColor={this.props.pressColor}\n                  pressOpacity={this.props.pressOpacity}\n                  delayPressIn={0}\n                  onPress={() => this._handleTabPress({ route })}\n                  onLongPress={() => this._handleTabLongPress({ route })}\n                  style={tabContainerStyle}\n                >\n                  <View pointerEvents=\"none\" style={styles.container}>\n                    <Animated.View\n                      style={[\n                        styles.tabItem,\n                        tabStyle,\n                        passedTabStyle,\n                        styles.container,\n                      ]}\n                    >\n                      {icon}\n                      {label}\n                    </Animated.View>\n                    {badge ? (\n                      <Animated.View\n                        style={[\n                          styles.badge,\n                          { opacity: this.state.visibility },\n                        ]}\n                      >\n                        {badge}\n                      </Animated.View>\n                    ) : null}\n                  </View>\n                </TouchableItem>\n              );\n            })}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.OS === 'web' ? ('auto': any) : 'scroll',\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n    },\n    // We don't need zIndex on Android, disable it since it's buggy\n    zIndex: Platform.OS === 'android' ? 0 : 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  tabLabel: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    margin: 8,\n  },\n  tabItem: {\n    flex: 1,\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}