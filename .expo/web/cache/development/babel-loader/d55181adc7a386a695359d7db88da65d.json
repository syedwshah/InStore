{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation-tabs/node_modules/react-native-tab-view/src/PagerExperimental.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PagerRendererPropType } from \"./PropTypes\";\nvar DefaultTransitionSpec = {\n  timing: Animated.spring,\n  tension: 68,\n  friction: 12\n};\n\nvar PagerExperimental = function (_React$Component) {\n  _inherits(PagerExperimental, _React$Component);\n\n  var _super = _createSuper(PagerExperimental);\n\n  function PagerExperimental() {\n    var _this;\n\n    _classCallCheck(this, PagerExperimental);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handleHandlerStateChange = function (event) {\n      var GestureHandler = _this.props.GestureHandler;\n\n      if (event.nativeEvent.state === GestureHandler.State.BEGAN) {\n        _this.props.onSwipeStart && _this.props.onSwipeStart();\n      } else if (event.nativeEvent.state === GestureHandler.State.END) {\n        _this.props.onSwipeEnd && _this.props.onSwipeEnd();\n        var _this$props = _this.props,\n            navigationState = _this$props.navigationState,\n            layout = _this$props.layout,\n            _this$props$swipeDist = _this$props.swipeDistanceThreshold,\n            swipeDistanceThreshold = _this$props$swipeDist === void 0 ? layout.width / 1.75 : _this$props$swipeDist,\n            _this$props$swipeVelo = _this$props.swipeVelocityThreshold,\n            swipeVelocityThreshold = _this$props$swipeVelo === void 0 ? 150 : _this$props$swipeVelo;\n        var _event$nativeEvent = event.nativeEvent,\n            translationX = _event$nativeEvent.translationX,\n            translationY = _event$nativeEvent.translationY,\n            velocityX = _event$nativeEvent.velocityX,\n            velocityY = _event$nativeEvent.velocityY;\n        var currentIndex = typeof _this._pendingIndex === 'number' ? _this._pendingIndex : navigationState.index;\n        var nextIndex = currentIndex;\n\n        if (Math.abs(translationX) > Math.abs(translationY) && Math.abs(velocityX) > Math.abs(velocityY) && (Math.abs(translationX) > swipeDistanceThreshold || Math.abs(velocityX) > swipeVelocityThreshold)) {\n          nextIndex = Math.round(Math.min(Math.max(0, currentIndex - translationX / Math.abs(translationX)), navigationState.routes.length - 1));\n        }\n\n        if (!isFinite(nextIndex) || !_this.props.canJumpToTab(_this.props.navigationState.routes[nextIndex])) {\n          nextIndex = currentIndex;\n        }\n\n        _this._transitionTo(nextIndex, velocityX);\n      }\n    };\n\n    _this._transitionTo = function (index, velocity) {\n      var animated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var offset = -index * _this.props.layout.width;\n\n      if (_this.props.animationEnabled === false || animated === false) {\n        _this.props.panX.setValue(0);\n\n        _this.props.offsetX.setValue(offset);\n\n        return;\n      }\n\n      var timing = DefaultTransitionSpec.timing,\n          transitionConfig = _objectWithoutProperties(DefaultTransitionSpec, [\"timing\"]);\n\n      var useNativeDriver = _this.props.useNativeDriver;\n      Animated.parallel([timing(_this.props.panX, _objectSpread({}, transitionConfig, {\n        toValue: 0,\n        velocity: velocity,\n        useNativeDriver: useNativeDriver\n      })), timing(_this.props.offsetX, _objectSpread({}, transitionConfig, {\n        toValue: offset,\n        velocity: velocity,\n        useNativeDriver: useNativeDriver\n      }))]).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (finished) {\n          var route = _this.props.navigationState.routes[index];\n\n          _this.props.jumpTo(route.key);\n\n          _this.props.onAnimationEnd && _this.props.onAnimationEnd();\n          _this._pendingIndex = null;\n        }\n      });\n      _this._pendingIndex = index;\n    };\n\n    return _this;\n  }\n\n  _createClass(PagerExperimental, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n        this._transitionTo(this.props.navigationState.index, undefined, false);\n      } else if (prevProps.navigationState.index !== this.props.navigationState.index && this.props.navigationState.index !== this._pendingIndex) {\n        this._transitionTo(this.props.navigationState.index);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          GestureHandler = _this$props2.GestureHandler,\n          panX = _this$props2.panX,\n          offsetX = _this$props2.offsetX,\n          layout = _this$props2.layout,\n          navigationState = _this$props2.navigationState,\n          swipeEnabled = _this$props2.swipeEnabled,\n          children = _this$props2.children;\n      var width = layout.width;\n      var routes = navigationState.routes;\n      var maxTranslate = width * (routes.length - 1);\n      var translateX = routes.length > 1 ? Animated.add(panX, offsetX).interpolate({\n        inputRange: [-maxTranslate, 0],\n        outputRange: [-maxTranslate, 0],\n        extrapolate: 'clamp'\n      }) : 0;\n      return React.createElement(GestureHandler.PanGestureHandler, {\n        enabled: layout.width !== 0 && swipeEnabled !== false,\n        minDeltaX: 10,\n        onGestureEvent: Animated.event([{\n          nativeEvent: {\n            translationX: this.props.panX\n          }\n        }], {\n          useNativeDriver: this.props.useNativeDriver\n        }),\n        onHandlerStateChange: this._handleHandlerStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.sheet, width ? {\n          width: routes.length * width,\n          transform: [{\n            translateX: translateX\n          }]\n        } : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, React.Children.map(children, function (child, i) {\n        var route = navigationState.routes[i];\n        var focused = i === navigationState.index;\n        return React.createElement(View, {\n          key: route.key,\n          testID: _this2.props.getTestID({\n            route: route\n          }),\n          accessibilityElementsHidden: !focused,\n          importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n          style: width ? {\n            width: width\n          } : focused ? StyleSheet.absoluteFill : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }\n        }, focused || width ? child : null);\n      })));\n    }\n  }]);\n\n  return PagerExperimental;\n}(React.Component);\n\nPagerExperimental.propTypes = _objectSpread({}, PagerRendererPropType, {\n  swipeDistanceThreshold: PropTypes.number,\n  swipeVelocityThreshold: PropTypes.number,\n  GestureHandler: PropTypes.object\n});\nPagerExperimental.defaultProps = {\n  canJumpToTab: function canJumpToTab() {\n    return true;\n  }\n};\nexport { PagerExperimental as default };\nvar styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/node_modules/react-navigation-tabs/node_modules/react-native-tab-view/src/PagerExperimental.js"],"names":["React","PropTypes","PagerRendererPropType","DefaultTransitionSpec","timing","Animated","spring","tension","friction","PagerExperimental","_handleHandlerStateChange","event","GestureHandler","props","nativeEvent","state","State","BEGAN","onSwipeStart","END","onSwipeEnd","navigationState","layout","swipeDistanceThreshold","width","swipeVelocityThreshold","translationX","translationY","velocityX","velocityY","currentIndex","_pendingIndex","index","nextIndex","Math","abs","round","min","max","routes","length","isFinite","canJumpToTab","_transitionTo","velocity","animated","offset","animationEnabled","panX","setValue","offsetX","transitionConfig","useNativeDriver","parallel","toValue","start","finished","route","jumpTo","key","onAnimationEnd","prevProps","undefined","swipeEnabled","children","maxTranslate","translateX","add","interpolate","inputRange","outputRange","extrapolate","styles","sheet","transform","Children","map","child","i","focused","getTestID","StyleSheet","absoluteFill","Component","propTypes","number","object","defaultProps","create","flex","flexDirection","alignItems"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { PagerRendererPropType } from './PropTypes';\nimport type { PagerRendererProps } from './TypeDefinitions';\n\ntype Props<T> = PagerRendererProps<T> & {\n  swipeDistanceThreshold?: number,\n  swipeVelocityThreshold?: number,\n  GestureHandler: any,\n};\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  tension: 68,\n  friction: 12,\n};\n\nexport default class PagerExperimental<T: *> extends React.Component<Props<T>> {\n  static propTypes = {\n    ...PagerRendererPropType,\n    swipeDistanceThreshold: PropTypes.number,\n    swipeVelocityThreshold: PropTypes.number,\n    GestureHandler: PropTypes.object,\n  };\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n  };\n\n  componentDidUpdate(prevProps: Props<T>) {\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._transitionTo(this.props.navigationState.index, undefined, false);\n    } else if (\n      prevProps.navigationState.index !== this.props.navigationState.index &&\n      this.props.navigationState.index !== this._pendingIndex\n    ) {\n      this._transitionTo(this.props.navigationState.index);\n    }\n  }\n\n  _handleHandlerStateChange = event => {\n    const { GestureHandler } = this.props;\n\n    if (event.nativeEvent.state === GestureHandler.State.BEGAN) {\n      this.props.onSwipeStart && this.props.onSwipeStart();\n    } else if (event.nativeEvent.state === GestureHandler.State.END) {\n      this.props.onSwipeEnd && this.props.onSwipeEnd();\n\n      const {\n        navigationState,\n        layout,\n        swipeDistanceThreshold = layout.width / 1.75,\n        swipeVelocityThreshold = 150,\n      } = this.props;\n      const {\n        translationX,\n        translationY,\n        velocityX,\n        velocityY,\n      } = event.nativeEvent;\n      const currentIndex =\n        typeof this._pendingIndex === 'number'\n          ? this._pendingIndex\n          : navigationState.index;\n\n      let nextIndex = currentIndex;\n\n      if (\n        Math.abs(translationX) > Math.abs(translationY) &&\n        Math.abs(velocityX) > Math.abs(velocityY) &&\n        (Math.abs(translationX) > swipeDistanceThreshold ||\n          Math.abs(velocityX) > swipeVelocityThreshold)\n      ) {\n        nextIndex = Math.round(\n          Math.min(\n            Math.max(0, currentIndex - translationX / Math.abs(translationX)),\n            navigationState.routes.length - 1\n          )\n        );\n      }\n\n      if (\n        !isFinite(nextIndex) ||\n        !this.props.canJumpToTab(this.props.navigationState.routes[nextIndex])\n      ) {\n        nextIndex = currentIndex;\n      }\n\n      this._transitionTo(nextIndex, velocityX);\n    }\n  };\n\n  _transitionTo = (\n    index: number,\n    velocity?: number,\n    animated?: boolean = true\n  ) => {\n    const offset = -index * this.props.layout.width;\n\n    if (this.props.animationEnabled === false || animated === false) {\n      this.props.panX.setValue(0);\n      this.props.offsetX.setValue(offset);\n      return;\n    }\n\n    const { timing, ...transitionConfig } = DefaultTransitionSpec;\n    const { useNativeDriver } = this.props;\n\n    Animated.parallel([\n      timing(this.props.panX, {\n        ...transitionConfig,\n        toValue: 0,\n        velocity,\n        useNativeDriver,\n      }),\n      timing(this.props.offsetX, {\n        ...transitionConfig,\n        toValue: offset,\n        velocity,\n        useNativeDriver,\n      }),\n    ]).start(({ finished }) => {\n      if (finished) {\n        const route = this.props.navigationState.routes[index];\n        this.props.jumpTo(route.key);\n        this.props.onAnimationEnd && this.props.onAnimationEnd();\n        this._pendingIndex = null;\n      }\n    });\n\n    this._pendingIndex = index;\n  };\n\n  _pendingIndex: ?number;\n\n  render() {\n    const {\n      GestureHandler,\n      panX,\n      offsetX,\n      layout,\n      navigationState,\n      swipeEnabled,\n      children,\n    } = this.props;\n    const { width } = layout;\n    const { routes } = navigationState;\n    const maxTranslate = width * (routes.length - 1);\n    const translateX =\n      routes.length > 1\n        ? Animated.add(panX, offsetX).interpolate({\n            inputRange: [-maxTranslate, 0],\n            outputRange: [-maxTranslate, 0],\n            extrapolate: 'clamp',\n          })\n        : 0;\n\n    return (\n      <GestureHandler.PanGestureHandler\n        enabled={layout.width !== 0 && swipeEnabled !== false}\n        minDeltaX={10}\n        onGestureEvent={Animated.event(\n          [{ nativeEvent: { translationX: this.props.panX } }],\n          { useNativeDriver: this.props.useNativeDriver }\n        )}\n        onHandlerStateChange={this._handleHandlerStateChange}\n      >\n        <Animated.View\n          style={[\n            styles.sheet,\n            width\n              ? { width: routes.length * width, transform: [{ translateX }] }\n              : null,\n          ]}\n        >\n          {React.Children.map(children, (child, i) => {\n            const route = navigationState.routes[i];\n            const focused = i === navigationState.index;\n\n            return (\n              <View\n                key={route.key}\n                testID={this.props.getTestID({ route })}\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  width ? { width } : focused ? StyleSheet.absoluteFill : null\n                }\n              >\n                {focused || width ? child : null}\n              </View>\n            );\n          })}\n        </Animated.View>\n      </GestureHandler.PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}