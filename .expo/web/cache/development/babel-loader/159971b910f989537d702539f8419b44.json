{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Constants from 'expo-constants';\nimport * as Facebook from 'expo-facebook';\nvar permissions = ['public_profile', 'email'];\n\nvar loginAsync = function loginAsync() {\n  var _await$Facebook$logIn, type, token;\n\n  return _regeneratorRuntime.async(function loginAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          Facebook.initializeAsync(Constants.manifest.facebookAppId, Constants.manifest.facebookDisplayName);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync(Constants.manifest.facebookAppId, {\n            permissions: permissions\n          }));\n\n        case 4:\n          _await$Facebook$logIn = _context.sent;\n          type = _await$Facebook$logIn.type;\n          token = _await$Facebook$logIn.token;\n\n          if (!(type === 'success')) {\n            _context.next = 9;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Promise.resolve(token));\n\n        case 9:\n          return _context.abrupt(\"return\", Promise.reject(\"No success\"));\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};\n\nexport var FacebookApi = {\n  loginAsync: loginAsync\n};","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/src/api/Facebook.js"],"names":["Constants","Facebook","permissions","loginAsync","initializeAsync","manifest","facebookAppId","facebookDisplayName","logInWithReadPermissionsAsync","type","token","Promise","resolve","reject","FacebookApi"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAGA,IAAMC,WAAW,GAAG,CAAC,gBAAD,EAAmB,OAAnB,CAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXF,UAAAA,QAAQ,CAACG,eAAT,CAAyBJ,SAAS,CAACK,QAAV,CAAmBC,aAA5C,EAA2DN,SAAS,CAACK,QAAV,CAAmBE,mBAA9E;AAFW;AAAA,2CAImBN,QAAQ,CAACO,6BAAT,CAAuCR,SAAS,CAACK,QAAV,CAAmBC,aAA1D,EAAyE;AAAEJ,YAAAA,WAAW,EAAXA;AAAF,WAAzE,CAJnB;;AAAA;AAAA;AAIHO,UAAAA,IAJG,yBAIHA,IAJG;AAIGC,UAAAA,KAJH,yBAIGA,KAJH;;AAAA,gBAMPD,IAAI,KAAK,SANF;AAAA;AAAA;AAAA;;AAAA,2CAOAE,OAAO,CAACC,OAAR,CAAgBF,KAAhB,CAPA;;AAAA;AAAA,2CAUJC,OAAO,CAACE,MAAR,CAAe,YAAf,CAVI;;AAAA;AAAA;AAAA;AAAA,2CAgBJF,OAAO,CAACE,MAAR,aAhBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAoBA,OAAO,IAAMC,WAAW,GAAG;AACvBX,EAAAA,UAAU,EAAVA;AADuB,CAApB","sourcesContent":["import Constants from 'expo-constants';\nimport * as Facebook from 'expo-facebook';\n\n\nconst permissions = ['public_profile', 'email'];\n\nconst loginAsync = async () => {\n    try {\n        Facebook.initializeAsync(Constants.manifest.facebookAppId, Constants.manifest.facebookDisplayName);\n\n        const { type, token } = await Facebook.logInWithReadPermissionsAsync(Constants.manifest.facebookAppId, { permissions });\n\n        if (type === 'success') {\n            return Promise.resolve(token);\n        }\n\n        return Promise.reject(\"No success\");\n\n    }\n\n    catch (error) {\n\n        return Promise.reject(error);\n    }   \n}\n\nexport const FacebookApi = {\n    loginAsync\n};"]},"metadata":{},"sourceType":"module"}