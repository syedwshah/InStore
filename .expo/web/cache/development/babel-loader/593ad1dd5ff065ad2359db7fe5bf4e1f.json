{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/shah/Desktop/React_Projects/InStore/node_modules/react-native-tab-view/src/TabViewAnimated.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationStatePropType } from \"./TabViewPropTypes\";\nvar TabViewPager;\n\nswitch (Platform.OS) {\n  case 'android':\n    TabViewPager = require(\"./TabViewPagerAndroid\").default;\n    break;\n\n  case 'ios':\n    TabViewPager = require(\"./TabViewPagerScroll\").default;\n    break;\n\n  default:\n    TabViewPager = require(\"./TabViewPagerPan\").default;\n    break;\n}\n\nvar TabViewAnimated = function (_React$Component) {\n  _inherits(TabViewAnimated, _React$Component);\n\n  var _super = _createSuper(TabViewAnimated);\n\n  function TabViewAnimated(_props) {\n    var _this;\n\n    _classCallCheck(this, TabViewAnimated);\n\n    _this = _super.call(this, _props);\n    _this._mounted = false;\n\n    _this._renderScene = function (props) {\n      return _this.props.renderScene(props);\n    };\n\n    _this._handleLayout = function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          height = _e$nativeEvent$layout.height,\n          width = _e$nativeEvent$layout.width;\n\n      if (_this.state.layout.width === width && _this.state.layout.height === height) {\n        return;\n      }\n\n      _this.state.offsetX.setValue(-_this.props.navigationState.index * width);\n\n      _this.state.layoutXY.setValue({\n        x: width || 0.001,\n        y: height || 0.001\n      });\n\n      _this.setState({\n        layout: {\n          measured: true,\n          height: height,\n          width: width\n        }\n      });\n    };\n\n    _this._buildSceneRendererProps = function () {\n      return {\n        panX: _this.state.panX,\n        offsetX: _this.state.offsetX,\n        position: _this.state.position,\n        layout: _this.state.layout,\n        navigationState: _this.props.navigationState,\n        jumpTo: _this._jumpTo,\n        jumpToIndex: _this._jumpToIndex,\n        useNativeDriver: _this.props.useNativeDriver === true\n      };\n    };\n\n    _this._jumpToIndex = function (index) {\n      var key = _this.props.navigationState.routes[index].key;\n      console.warn('Method `jumpToIndex` is deprecated. Please upgrade your code to use `jumpTo` instead.', \"Change your code from `jumpToIndex(\" + index + \")` to `jumpTo('\" + key + \"').`\");\n\n      _this._jumpTo(key);\n    };\n\n    _this._jumpTo = function (key) {\n      if (!_this._mounted) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          canJumpToTab = _this$props.canJumpToTab,\n          navigationState = _this$props.navigationState;\n      var index = navigationState.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n\n      if (!canJumpToTab(navigationState.routes[index])) {\n        return;\n      }\n\n      if (index !== navigationState.index) {\n        _this.props.onIndexChange(index);\n      }\n    };\n\n    var _navigationState = _this.props.navigationState;\n\n    var layout = _objectSpread({}, _this.props.initialLayout, {\n      measured: false\n    });\n\n    var panX = new Animated.Value(0);\n    var offsetX = new Animated.Value(-_navigationState.index * layout.width);\n    var layoutXY = new Animated.ValueXY({\n      x: layout.width || 0.001,\n      y: layout.height || 0.001\n    });\n    var position = Animated.multiply(Animated.divide(Animated.add(panX, offsetX), layoutXY.x), -1);\n    _this.state = {\n      layout: layout,\n      layoutXY: layoutXY,\n      panX: panX,\n      offsetX: offsetX,\n      position: position\n    };\n    return _this;\n  }\n\n  _createClass(TabViewAnimated, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          navigationState = _this$props2.navigationState,\n          onIndexChange = _this$props2.onIndexChange,\n          initialLayout = _this$props2.initialLayout,\n          renderScene = _this$props2.renderScene,\n          renderPager = _this$props2.renderPager,\n          renderHeader = _this$props2.renderHeader,\n          renderFooter = _this$props2.renderFooter,\n          rest = _objectWithoutProperties(_this$props2, [\"navigationState\", \"onIndexChange\", \"initialLayout\", \"renderScene\", \"renderPager\", \"renderHeader\", \"renderFooter\"]);\n\n      var props = this._buildSceneRendererProps();\n\n      return React.createElement(View, {\n        collapsable: false,\n        style: [styles.container, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }\n      }, renderHeader && renderHeader(props), React.createElement(View, {\n        onLayout: this._handleLayout,\n        style: styles.pager,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }, renderPager(_objectSpread({}, props, {}, rest, {\n        panX: this.state.panX,\n        offsetX: this.state.offsetX,\n        children: navigationState.routes.map(function (route, index) {\n          var scene = _this2._renderScene(_objectSpread({}, props, {\n            route: route,\n            index: index,\n            focused: index === navigationState.index\n          }));\n\n          if (scene) {\n            return React.cloneElement(scene, {\n              key: route.key\n            });\n          }\n\n          return scene;\n        })\n      }))), renderFooter && renderFooter(props));\n    }\n  }]);\n\n  return TabViewAnimated;\n}(React.Component);\n\nTabViewAnimated.propTypes = {\n  navigationState: NavigationStatePropType.isRequired,\n  onIndexChange: PropTypes.func.isRequired,\n  initialLayout: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }),\n  canJumpToTab: PropTypes.func.isRequired,\n  renderPager: PropTypes.func.isRequired,\n  renderScene: PropTypes.func.isRequired,\n  renderHeader: PropTypes.func,\n  renderFooter: PropTypes.func\n};\nTabViewAnimated.defaultProps = {\n  canJumpToTab: function canJumpToTab() {\n    return true;\n  },\n  renderPager: function renderPager(props) {\n    return React.createElement(TabViewPager, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 27\n      }\n    }));\n  },\n  initialLayout: {\n    height: 0,\n    width: 0\n  },\n  useNativeDriver: false\n};\nexport { TabViewAnimated as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pager: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/shah/Desktop/React_Projects/InStore/node_modules/react-native-tab-view/src/TabViewAnimated.js"],"names":["React","PropTypes","NavigationStatePropType","TabViewPager","Platform","OS","require","default","TabViewAnimated","props","_mounted","_renderScene","renderScene","_handleLayout","e","nativeEvent","layout","height","width","state","offsetX","setValue","navigationState","index","layoutXY","x","y","setState","measured","_buildSceneRendererProps","panX","position","jumpTo","_jumpTo","jumpToIndex","_jumpToIndex","useNativeDriver","key","routes","console","warn","canJumpToTab","findIndex","route","onIndexChange","initialLayout","Animated","Value","ValueXY","multiply","divide","add","renderPager","renderHeader","renderFooter","rest","styles","container","style","pager","children","map","scene","focused","cloneElement","Component","propTypes","isRequired","func","shape","number","defaultProps","StyleSheet","create","flex","overflow"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Platform, View, StyleSheet } from 'react-native';\nimport { NavigationStatePropType } from './TabViewPropTypes';\nimport type {\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  PagerCommonProps,\n  PagerExtraProps,\n  Style,\n} from './TabViewTypeDefinitions';\n\ntype Props<T> = PagerCommonProps<T> &\n  PagerExtraProps & {\n    navigationState: NavigationState<T>,\n    onIndexChange: (index: number) => mixed,\n    initialLayout?: Layout,\n    renderPager: (props: *) => React.Element<any>,\n    renderScene: (\n      props: SceneRendererProps<T> & Scene<T>\n    ) => ?React.Element<any>,\n    renderHeader?: (props: SceneRendererProps<T>) => ?React.Element<any>,\n    renderFooter?: (props: SceneRendererProps<T>) => ?React.Element<any>,\n    useNativeDriver?: boolean,\n    style?: Style,\n  };\n\ntype State = {|\n  layout: Layout & { measured: boolean },\n  layoutXY: Animated.ValueXY,\n  panX: Animated.Value,\n  offsetX: Animated.Value,\n  position: any,\n|};\n\nlet TabViewPager;\n\nswitch (Platform.OS) {\n  case 'android':\n    TabViewPager = require('./TabViewPagerAndroid').default;\n    break;\n  case 'ios':\n    TabViewPager = require('./TabViewPagerScroll').default;\n    break;\n  default:\n    TabViewPager = require('./TabViewPagerPan').default;\n    break;\n}\n\nexport default class TabViewAnimated<T: *> extends React.Component<\n  Props<T>,\n  State\n> {\n  static propTypes = {\n    navigationState: NavigationStatePropType.isRequired,\n    onIndexChange: PropTypes.func.isRequired,\n    initialLayout: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired,\n    }),\n    canJumpToTab: PropTypes.func.isRequired,\n    renderPager: PropTypes.func.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    renderHeader: PropTypes.func,\n    renderFooter: PropTypes.func,\n  };\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n    renderPager: props => <TabViewPager {...props} />,\n    initialLayout: {\n      height: 0,\n      width: 0,\n    },\n    useNativeDriver: false,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    const { navigationState } = this.props;\n    const layout = {\n      ...this.props.initialLayout,\n      measured: false,\n    };\n\n    const panX = new Animated.Value(0);\n    const offsetX = new Animated.Value(-navigationState.index * layout.width);\n    const layoutXY = new Animated.ValueXY({\n      // This is hacky, but we need to make sure that the value is never 0\n      x: layout.width || 0.001,\n      y: layout.height || 0.001,\n    });\n    const position = Animated.multiply(\n      Animated.divide(Animated.add(panX, offsetX), layoutXY.x),\n      -1\n    );\n\n    this.state = {\n      layout,\n      layoutXY,\n      panX,\n      offsetX,\n      position,\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _mounted: boolean = false;\n  _nextIndex: ?number;\n\n  _renderScene = (props: SceneRendererProps<T> & Scene<T>) => {\n    return this.props.renderScene(props);\n  };\n\n  _handleLayout = (e: any) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    this.state.offsetX.setValue(-this.props.navigationState.index * width);\n    this.state.layoutXY.setValue({\n      // This is hacky, but we need to make sure that the value is never 0\n      x: width || 0.001,\n      y: height || 0.001,\n    });\n    this.setState({\n      layout: {\n        measured: true,\n        height,\n        width,\n      },\n    });\n  };\n\n  _buildSceneRendererProps = (): SceneRendererProps<*> => ({\n    panX: this.state.panX,\n    offsetX: this.state.offsetX,\n    position: this.state.position,\n    layout: this.state.layout,\n    navigationState: this.props.navigationState,\n    jumpTo: this._jumpTo,\n    jumpToIndex: this._jumpToIndex,\n    useNativeDriver: this.props.useNativeDriver === true,\n  });\n\n  _jumpToIndex = (index: number) => {\n    const { key } = this.props.navigationState.routes[index];\n\n    console.warn(\n      'Method `jumpToIndex` is deprecated. Please upgrade your code to use `jumpTo` instead.',\n      `Change your code from \\`jumpToIndex(${index})\\` to \\`jumpTo('${key}').\\``\n    );\n\n    this._jumpTo(key);\n  };\n\n  _jumpTo = (key: string) => {\n    if (!this._mounted) {\n      // We are no longer mounted, this is a no-op\n      return;\n    }\n\n    const { canJumpToTab, navigationState } = this.props;\n    const index = navigationState.routes.findIndex(route => route.key === key);\n\n    if (!canJumpToTab(navigationState.routes[index])) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      this.props.onIndexChange(index);\n    }\n  };\n\n  render() {\n    const {\n      /* eslint-disable no-unused-vars */\n      navigationState,\n      onIndexChange,\n      initialLayout,\n      renderScene,\n      /* eslint-enable no-unused-vars */\n      renderPager,\n      renderHeader,\n      renderFooter,\n      ...rest\n    } = this.props;\n\n    const props = this._buildSceneRendererProps();\n\n    return (\n      <View collapsable={false} style={[styles.container, this.props.style]}>\n        {renderHeader && renderHeader(props)}\n        <View onLayout={this._handleLayout} style={styles.pager}>\n          {renderPager({\n            ...props,\n            ...rest,\n            panX: this.state.panX,\n            offsetX: this.state.offsetX,\n            children: navigationState.routes.map((route, index) => {\n              const scene = this._renderScene({\n                ...props,\n                route,\n                index,\n                focused: index === navigationState.index,\n              });\n\n              if (scene) {\n                return React.cloneElement(scene, { key: route.key });\n              }\n\n              return scene;\n            }),\n          })}\n        </View>\n        {renderFooter && renderFooter(props)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pager: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}