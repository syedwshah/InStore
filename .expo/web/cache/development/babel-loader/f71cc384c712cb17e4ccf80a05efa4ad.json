{"ast":null,"code":"import get from 'lodash.get';\nexport var spaceUtils = function spaceUtils(props) {\n  var _style = {};\n  var themeSpace = get(props, ['theme', 'space']);\n\n  if (themeSpace) {\n    var mb = get(props, 'mb');\n\n    if (mb) {\n      if (typeof mb === 'string') {\n        var space = themeSpace[mb];\n\n        if (space) {\n          _style.marginBottom = space;\n        }\n      } else if (typeof mb === 'number') {\n        _style.marginBottom = mb;\n      }\n    }\n\n    var mt = get(props, 'mt');\n\n    if (mt) {\n      if (typeof mt === 'string') {\n        var _space = themeSpace[mt];\n\n        if (_space) {\n          _style.marginTop = _space;\n        }\n      } else if (typeof mt === 'number') {\n        _style.marginTop = mt;\n      }\n    }\n\n    var mr = get(props, 'mr');\n\n    if (mr) {\n      if (typeof mr === 'string') {\n        var _space2 = themeSpace[mr];\n\n        if (_space2) {\n          _style.marginRight = _space2;\n        }\n      } else if (typeof mr === 'number') {\n        _style.marginRight = mr;\n      }\n    }\n\n    var ml = get(props, 'ml');\n\n    if (ml) {\n      if (typeof ml === 'string') {\n        var _space3 = themeSpace[ml];\n\n        if (_space3) {\n          _style.marginLeft = _space3;\n        }\n      } else if (typeof ml === 'number') {\n        _style.marginLeft = ml;\n      }\n    }\n\n    var my = get(props, 'my');\n\n    if (my) {\n      if (typeof my === 'string') {\n        var _space4 = themeSpace[my];\n\n        if (_space4) {\n          _style.marginVertical = _space4;\n        }\n      } else if (typeof my === 'number') {\n        _style.marginVertical = my;\n      }\n    }\n\n    var mx = get(props, 'mx');\n\n    if (mx) {\n      if (typeof mx === 'string') {\n        var _space5 = themeSpace[mx];\n\n        if (_space5) {\n          _style.marginHorizontal = _space5;\n        }\n      } else if (typeof mx === 'number') {\n        _style.marginHorizontal = mx;\n      }\n    }\n\n    var m = get(props, 'm');\n\n    if (m) {\n      if (typeof m === 'string') {\n        var _space6 = themeSpace[m];\n\n        if (_space6) {\n          _style.margin = _space6;\n        }\n      } else if (typeof m === 'number') {\n        _style.margin = m;\n      }\n    }\n\n    var pb = get(props, 'pb');\n\n    if (pb) {\n      if (typeof pb === 'string') {\n        var _space7 = themeSpace[pb];\n\n        if (_space7) {\n          _style.paddingBottom = _space7;\n        }\n      } else if (typeof pb === 'number') {\n        _style.paddingBottom = pb;\n      }\n    }\n\n    var pt = get(props, 'pt');\n\n    if (pt) {\n      if (typeof pt === 'string') {\n        var _space8 = themeSpace[pt];\n\n        if (_space8) {\n          _style.paddingTop = _space8;\n        }\n      } else if (typeof pt === 'number') {\n        _style.paddingTop = pt;\n      }\n    }\n\n    var pr = get(props, 'pr');\n\n    if (pr) {\n      if (typeof pr === 'string') {\n        var _space9 = themeSpace[pr];\n\n        if (_space9) {\n          _style.paddingRight = _space9;\n        }\n      } else if (typeof pr === 'number') {\n        _style.paddingRight = pr;\n      }\n    }\n\n    var pl = get(props, 'pl');\n\n    if (pl) {\n      if (typeof pl === 'string') {\n        var _space10 = themeSpace[pl];\n\n        if (_space10) {\n          _style.paddingLeft = _space10;\n        }\n      } else if (typeof pl === 'number') {\n        _style.paddingLeft = pl;\n      }\n    }\n\n    var py = get(props, 'py');\n\n    if (py) {\n      if (typeof py === 'string') {\n        var _space11 = themeSpace[py];\n\n        if (_space11) {\n          _style.paddingVertical = _space11;\n        }\n      } else if (typeof py === 'number') {\n        _style.paddingVertical = py;\n      }\n    }\n\n    var px = get(props, 'px');\n\n    if (px) {\n      if (typeof px === 'string') {\n        var _space12 = themeSpace[px];\n\n        if (_space12) {\n          _style.paddingHorizontal = _space12;\n        }\n      } else if (typeof px === 'number') {\n        _style.paddingHorizontal = px;\n      }\n    }\n\n    var p = get(props, 'p');\n\n    if (p) {\n      if (typeof p === 'string') {\n        var _space13 = themeSpace[p];\n\n        if (_space13) {\n          _style.padding = _space13;\n        }\n      } else if (typeof p === 'number') {\n        _style.padding = p;\n      }\n    }\n  }\n\n  return _style;\n};","map":{"version":3,"sources":["space.ts"],"names":["spaceUtils","_style","themeSpace","get","mb","space","mt","mr","ml","my","mx","m","pb","pt","pr","pl","py","px","p"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\n\nimport { ITheme } from '../types/ITheme';\n\ntype Props = {\n  theme: ITheme;\n} & Partial<{\n  m: number | string;\n  mb: number | string;\n  mt: number | string;\n  mr: number | string;\n  ml: number | string;\n  my: number | string;\n  mx: number | string;\n\n  p: number | string;\n  pb: number | string;\n  py: number | string;\n  pt: number | string;\n  pr: number | string;\n  pl: number | string;\n  px: number | string;\n}>;\n\nexport const spaceUtils = (props: Props) => {\n  const _style: {\n    marginBottom?: number;\n    marginTop?: number;\n    marginHorizontal?: number;\n    marginVertical?: number;\n    marginRight?: number;\n    marginLeft?: number;\n    margin?: number;\n\n    padding?: number;\n    paddingBottom?: number;\n    paddingTop?: number;\n    paddingHorizontal?: number;\n    paddingVertical?: number;\n    paddingRight?: number;\n    paddingLeft?: number;\n  } = {};\n\n  const themeSpace = get(props, ['theme', 'space']);\n\n  if (themeSpace) {\n    const mb = get(props, 'mb');\n\n    if (mb) {\n      if (typeof mb === 'string') {\n        const space = themeSpace[mb];\n\n        if (space) {\n          _style.marginBottom = space;\n        }\n      } else if (typeof mb === 'number') {\n        _style.marginBottom = mb;\n      }\n    }\n\n    const mt = get(props, 'mt');\n\n    if (mt) {\n      if (typeof mt === 'string') {\n        const space = themeSpace[mt];\n\n        if (space) {\n          _style.marginTop = space;\n        }\n      } else if (typeof mt === 'number') {\n        _style.marginTop = mt;\n      }\n    }\n\n    const mr = get(props, 'mr');\n\n    if (mr) {\n      if (typeof mr === 'string') {\n        const space = themeSpace[mr];\n\n        if (space) {\n          _style.marginRight = space;\n        }\n      } else if (typeof mr === 'number') {\n        _style.marginRight = mr;\n      }\n    }\n\n    const ml = get(props, 'ml');\n\n    if (ml) {\n      if (typeof ml === 'string') {\n        const space = themeSpace[ml];\n\n        if (space) {\n          _style.marginLeft = space;\n        }\n      } else if (typeof ml === 'number') {\n        _style.marginLeft = ml;\n      }\n    }\n\n    const my = get(props, 'my');\n\n    if (my) {\n      if (typeof my === 'string') {\n        const space = themeSpace[my];\n\n        if (space) {\n          _style.marginVertical = space;\n        }\n      } else if (typeof my === 'number') {\n        _style.marginVertical = my;\n      }\n    }\n\n    const mx = get(props, 'mx');\n\n    if (mx) {\n      if (typeof mx === 'string') {\n        const space = themeSpace[mx];\n\n        if (space) {\n          _style.marginHorizontal = space;\n        }\n      } else if (typeof mx === 'number') {\n        _style.marginHorizontal = mx;\n      }\n    }\n\n    const m = get(props, 'm');\n\n    if (m) {\n      if (typeof m === 'string') {\n        const space = themeSpace[m];\n\n        if (space) {\n          _style.margin = space;\n        }\n      } else if (typeof m === 'number') {\n        _style.margin = m;\n      }\n    }\n\n    const pb = get(props, 'pb');\n\n    if (pb) {\n      if (typeof pb === 'string') {\n        const space = themeSpace[pb];\n\n        if (space) {\n          _style.paddingBottom = space;\n        }\n      } else if (typeof pb === 'number') {\n        _style.paddingBottom = pb;\n      }\n    }\n\n    const pt = get(props, 'pt');\n\n    if (pt) {\n      if (typeof pt === 'string') {\n        const space = themeSpace[pt];\n\n        if (space) {\n          _style.paddingTop = space;\n        }\n      } else if (typeof pt === 'number') {\n        _style.paddingTop = pt;\n      }\n    }\n\n    const pr = get(props, 'pr');\n\n    if (pr) {\n      if (typeof pr === 'string') {\n        const space = themeSpace[pr];\n\n        if (space) {\n          _style.paddingRight = space;\n        }\n      } else if (typeof pr === 'number') {\n        _style.paddingRight = pr;\n      }\n    }\n\n    const pl = get(props, 'pl');\n\n    if (pl) {\n      if (typeof pl === 'string') {\n        const space = themeSpace[pl];\n\n        if (space) {\n          _style.paddingLeft = space;\n        }\n      } else if (typeof pl === 'number') {\n        _style.paddingLeft = pl;\n      }\n    }\n\n    const py = get(props, 'py');\n\n    if (py) {\n      if (typeof py === 'string') {\n        const space = themeSpace[py];\n\n        if (space) {\n          _style.paddingVertical = space;\n        }\n      } else if (typeof py === 'number') {\n        _style.paddingVertical = py;\n      }\n    }\n\n    const px = get(props, 'px');\n\n    if (px) {\n      if (typeof px === 'string') {\n        const space = themeSpace[px];\n\n        if (space) {\n          _style.paddingHorizontal = space;\n        }\n      } else if (typeof px === 'number') {\n        _style.paddingHorizontal = px;\n      }\n    }\n\n    const p = get(props, 'p');\n\n    if (p) {\n      if (typeof p === 'string') {\n        const space = themeSpace[p];\n\n        if (space) {\n          _style.padding = space;\n        }\n      } else if (typeof p === 'number') {\n        _style.padding = p;\n      }\n    }\n  }\n\n  return _style;\n};\n"]},"metadata":{},"sourceType":"module"}